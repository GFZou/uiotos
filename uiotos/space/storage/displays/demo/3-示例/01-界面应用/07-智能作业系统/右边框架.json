{
  "v": "8.0.1",
  "p": {
    "background": "#20252e",
    "autoAdjustIndex": true,
    "hierarchicalRendering": true
  },
  "a": {
    "rotateAsClock": false,
    "gridBlockSize": 20,
    "gridAngle": 1.5708,
    "connectActionType": null,
    "fitContent": false,
    "zoomable": false,
    "rectSelectable": false,
    "pannable": false,
    "_professional": false
  },
  "d": [
    {
      "c": "ht.Node",
      "i": 74110,
      "p": {
        "name": "base",
        "displayName": "底板（_base）",
        "tag": "_base",
        "position": {
          "x": 537.10711,
          "y": 233.57907
        },
        "width": 1498,
        "height": 795.40757
      },
      "s": {
        "shape": "rect",
        "shape.background": null,
        "fullscreen.gap": 0,
        "2d.movable": false,
        "label.opacity": 0,
        "interactive": true,
        "label.position": 16,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "shape.border.width": 1,
        "label.font": "12px arial, sans-serif",
        "label": " ",
        "fullscreen": "fill",
        "shape.border.color": "rgba(57,157,219,0.30)",
        "shape.gradient.color": null,
        "2d.selectable": false
      }
    },
    {
      "c": "ht.Node",
      "i": 74111,
      "p": {
        "name": "bell-254",
        "displayName": "bell-254（bell-2541）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "tag": "bell-2541",
        "image": "symbols/develop/uiotos/arranged/icons/设备设施/bell-254.json",
        "host": {
          "__i": 74110
        },
        "position": {
          "x": -149.82455,
          "y": -136.32604
        },
        "width": 20.91961,
        "height": 20.91961
      },
      "s": {
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "label.opacity": 0,
        "2d.movable": false,
        "layout.h": "left",
        "layout.v": "top"
      },
      "a": {
        "icon-background": "rgb(48,217,255)"
      }
    },
    {
      "c": "ht.Node",
      "i": 74112,
      "p": {
        "name": "文字",
        "displayName": "文字（文字1）",
        "tag": "文字1",
        "image": "symbols/develop/uiotos/arranged/controls/draws/2-规则图形/文字.json",
        "position": {
          "x": 57.63953,
          "y": 25.4604
        }
      },
      "s": {
        "2d.visible": false,
        "label.opacity": 0,
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)"
      }
    },
    {
      "c": "ht.Text",
      "i": 74113,
      "p": {
        "displayName": "Text（Text1）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "tag": "Text1",
        "host": {
          "__i": 74110
        },
        "position": {
          "x": 47.98118,
          "y": -136.32604
        },
        "width": 374.69183,
        "height": 19.04409
      },
      "s": {
        "text": "2024-07-19  10:40:32  生产工艺SCZ_202406260006已完成，请知晓。",
        "label.position": 17,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "2d.movable": false,
        "layout.h": "left",
        "layout.v": "top"
      }
    },
    {
      "c": "ht.Text",
      "i": 74114,
      "p": {
        "displayName": "Text（Text2）",
        "tag": "Text2",
        "position": {
          "x": 1143.10573,
          "y": -136.32604
        },
        "width": 101.47504,
        "height": 31.52019
      },
      "s": {
        "text": "作业人员 ：",
        "label.position": 17,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "text.font": "20px arial, sans-serif"
      }
    },
    {
      "c": "ht.Text",
      "i": 74115,
      "p": {
        "displayName": "Text（Text3）",
        "tag": "Text3",
        "position": {
          "x": 1225.93492,
          "y": -136.32604
        },
        "width": 52.11468,
        "height": 31.52019
      },
      "s": {
        "text": "张亮",
        "label.position": 17,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "text.font": "20px arial, sans-serif",
        "text.color": "rgb(47,215,254)"
      },
      "a": {
        "background": [
          "rgb(0,125,233)",
          "rgb(65,158,240)",
          "rgb(2,111,207)",
          "rgb(200,200,200)"
        ]
      }
    },
    {
      "c": "ht.Text",
      "i": 74116,
      "p": {
        "displayName": "Text（Text4）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "tag": "Text4",
        "host": {
          "__i": 74110
        },
        "position": {
          "x": -73.27043,
          "y": -83.45663
        },
        "width": 195.12062,
        "height": 31.52019
      },
      "s": {
        "text": "SCZ_202406260006",
        "label.position": 17,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "text.font": "18px arial, sans-serif",
        "text.color": "rgb(247,247,247)",
        "2d.movable": false,
        "layout.h": "left",
        "layout.v": "top",
        "text.align": "center"
      }
    },
    {
      "c": "ht.Text",
      "i": 74117,
      "p": {
        "displayName": "Text（Text5）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "tag": "Text5",
        "host": {
          "__i": 74110
        },
        "position": {
          "x": -73.27043,
          "y": -29.94203
        },
        "width": 71.87412,
        "height": 31.52019
      },
      "s": {
        "text": "待接单",
        "label.position": 17,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "text.font": "16px arial, sans-serif",
        "text.color": "rgb(48,217,255)",
        "2d.movable": false,
        "layout.h": "left",
        "layout.v": "top",
        "text.align": "center"
      }
    },
    {
      "c": "ht.Node",
      "i": 74118,
      "p": {
        "name": "矩形圆角",
        "displayName": "矩形圆角（矩形圆角1）",
        "tag": "矩形圆角1",
        "image": "symbols/develop/uiotos/arranged/controls/draws/2-规则图形/矩形圆角.json",
        "position": {
          "x": -118.54971,
          "y": 225.12469
        }
      },
      "s": {
        "2d.visible": false,
        "label.opacity": 0,
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)"
      }
    },
    {
      "c": "ht.Text",
      "i": 74119,
      "p": {
        "displayName": "Text（Text6）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "tag": "Text6",
        "host": {
          "__i": 74110
        },
        "position": {
          "x": 326.20864,
          "y": -83.45663
        },
        "width": 89.82479,
        "height": 31.52019
      },
      "s": {
        "text": "计划时间：",
        "label.position": 17,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "text.font": "14px arial, sans-serif",
        "text.color": "rgb(247,247,247)",
        "2d.movable": false,
        "layout.h": "center",
        "layout.v": "top"
      }
    },
    {
      "c": "ht.Text",
      "i": 74120,
      "p": {
        "displayName": "Text（Text7）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "tag": "Text7",
        "host": {
          "__i": 74110
        },
        "position": {
          "x": 326.20864,
          "y": -29.94203
        },
        "width": 89.82479,
        "height": 31.52019
      },
      "s": {
        "text": "产品名称：",
        "label.position": 17,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "text.font": "14px arial, sans-serif",
        "text.color": "rgb(247,247,247)",
        "2d.movable": false,
        "layout.h": "center",
        "layout.v": "top"
      }
    },
    {
      "c": "ht.Text",
      "i": 74121,
      "p": {
        "displayName": "Text（Text8）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "tag": "Text8",
        "host": {
          "__i": 74110
        },
        "position": {
          "x": 326.20864,
          "y": 23.57257
        },
        "width": 89.82479,
        "height": 31.52019
      },
      "s": {
        "text": "班组名称：",
        "label.position": 17,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "text.font": "14px arial, sans-serif",
        "text.color": "rgb(247,247,247)",
        "2d.movable": false,
        "layout.h": "center",
        "layout.v": "top"
      }
    },
    {
      "c": "ht.Text",
      "i": 74122,
      "p": {
        "displayName": "Text（Text9）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "tag": "Text9",
        "host": {
          "__i": 74110
        },
        "position": {
          "x": 508.15021,
          "y": -83.45663
        },
        "width": 274.05834,
        "height": 31.52019
      },
      "s": {
        "text": "06-26  14:00:00至 06-27 04:00:00",
        "label.position": 17,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "text.font": "14px arial, sans-serif",
        "text.color": "rgb(48,217,255)",
        "2d.movable": false,
        "layout.h": "center",
        "layout.v": "top"
      }
    },
    {
      "c": "ht.Text",
      "i": 74123,
      "p": {
        "displayName": "Text（Text10）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "tag": "Text10",
        "host": {
          "__i": 74110
        },
        "position": {
          "x": 439.63562,
          "y": -29.94203
        },
        "width": 137.02917,
        "height": 31.52019
      },
      "s": {
        "text": "MD5cm-5m铆钉",
        "label.position": 17,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "text.font": "14px arial, sans-serif",
        "text.color": "rgb(48,217,255)",
        "2d.movable": false,
        "layout.h": "center",
        "layout.v": "top"
      }
    },
    {
      "c": "ht.Text",
      "i": 74124,
      "p": {
        "displayName": "Text（Text11）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "tag": "Text11",
        "host": {
          "__i": 74110
        },
        "position": {
          "x": 414.77145,
          "y": 23.57257
        },
        "width": 87.30084,
        "height": 31.52019
      },
      "s": {
        "text": "冷镦夜班",
        "label.position": 17,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "text.font": "14px arial, sans-serif",
        "text.color": "rgb(47,215,254)",
        "2d.movable": false,
        "layout.h": "center",
        "layout.v": "top"
      }
    },
    {
      "c": "ht.Text",
      "i": 74125,
      "p": {
        "displayName": "Text（Text12）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "tag": "Text12",
        "host": {
          "__i": 74110
        },
        "position": {
          "x": 980.78689,
          "y": -83.45663
        },
        "width": 89.82479,
        "height": 31.52019
      },
      "s": {
        "text": "计划数量：",
        "label.position": 17,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "text.font": "14px arial, sans-serif",
        "text.color": "rgb(247,247,247)",
        "2d.movable": false,
        "layout.h": "right",
        "layout.v": "top"
      }
    },
    {
      "c": "ht.Text",
      "i": 74126,
      "p": {
        "displayName": "Text（Text13）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "tag": "Text13",
        "host": {
          "__i": 74110
        },
        "position": {
          "x": 980.78689,
          "y": -29.94203
        },
        "width": 89.82479,
        "height": 31.52019
      },
      "s": {
        "text": "生产计数：",
        "label.position": 17,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "text.font": "14px arial, sans-serif",
        "text.color": "rgb(247,247,247)",
        "2d.movable": false,
        "layout.h": "right",
        "layout.v": "top"
      }
    },
    {
      "c": "ht.Text",
      "i": 74127,
      "p": {
        "displayName": "Text（Text14）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "tag": "Text14",
        "host": {
          "__i": 74110
        },
        "position": {
          "x": 980.78689,
          "y": 23.57257
        },
        "width": 89.82479,
        "height": 31.52019
      },
      "s": {
        "text": "报工数量：",
        "label.position": 17,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "text.font": "14px arial, sans-serif",
        "text.color": "rgb(247,247,247)",
        "2d.movable": false,
        "layout.h": "right",
        "layout.v": "top"
      }
    },
    {
      "c": "ht.Text",
      "i": 74128,
      "p": {
        "displayName": "Text（Text15）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "tag": "Text15",
        "host": {
          "__i": 74110
        },
        "position": {
          "x": 1050.08222,
          "y": -83.45663
        },
        "width": 48.76586,
        "height": 31.52019
      },
      "s": {
        "text": "50",
        "label.position": 17,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "text.font": "14px arial, sans-serif",
        "text.color": "rgb(47,215,254)",
        "2d.movable": false,
        "layout.h": "right",
        "layout.v": "top"
      }
    },
    {
      "c": "ht.Text",
      "i": 74129,
      "p": {
        "displayName": "Text（Text16）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "tag": "Text16",
        "host": {
          "__i": 74110
        },
        "position": {
          "x": 1051.42729,
          "y": -29.94203
        },
        "width": 51.45602,
        "height": 31.52019
      },
      "s": {
        "text": "0",
        "label.position": 17,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "text.font": "14px arial, sans-serif",
        "text.color": "rgb(47,215,254)",
        "2d.movable": false,
        "layout.h": "right",
        "layout.v": "top"
      }
    },
    {
      "c": "ht.Text",
      "i": 74130,
      "p": {
        "displayName": "Text（Text17）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "tag": "Text17",
        "host": {
          "__i": 74110
        },
        "position": {
          "x": 1050.08222,
          "y": 23.57257
        },
        "width": 48.76586,
        "height": 31.52019
      },
      "s": {
        "text": "0",
        "label.position": 17,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "text.font": "14px arial, sans-serif",
        "text.color": "rgb(47,215,254)",
        "2d.movable": false,
        "layout.h": "right",
        "layout.v": "top"
      }
    },
    {
      "c": "ht.Node",
      "i": 74131,
      "p": {
        "name": "btn",
        "displayName": "普通按钮（btn1）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "tag": "btn1",
        "dataBindings": {
          "a": {
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onFormClick": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_bindEvents_0": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Mon Jun 24 2024 07:35:01 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "ht.disabled",
              "valueType": "Boolean",
              "name": "禁用",
              "defaultValue": false,
              "description": "禁用",
              "group": "功能"
            },
            {
              "attr": "bindTabview",
              "valueType": "StringArray",
              "defaultValue": [
                "tab1",
                "0"
              ],
              "name": "bindTabview"
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "name": "userData"
            },
            {
              "attr": "onFormClick",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value",
                  "extra"
                ]
              },
              "description": "当点击时对外触发。",
              "name": "onFormClick"
            },
            {
              "attr": "clicked",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "event",
                  "data",
                  "view"
                ]
              },
              "defaultValue": "__ht__function(event, data, view) {setBindTabviewIndex(data,data.ca('bindTabview'));\r\ni.formEventBubblingUpper(\r\n    data,\r\n    view,\r\n    null,\r\n    'onFormClick',\r\n    null,\r\n    false\r\n);}",
              "name": "clicked"
            },
            {
              "attr": "fixedHeight",
              "valueType": "PositiveNumber",
              "group": "外观",
              "name": "fixedHeight"
            },
            {
              "attr": "ht.text",
              "valueType": "Multiline",
              "defaultValue": "按钮",
              "description": "文本。",
              "name": "ht.text"
            },
            {
              "attr": "ht.font",
              "valueType": "Font",
              "name": "字体",
              "description": "字体。"
            },
            {
              "attr": "ht.textColor",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(255,255,255)",
                "rgb(255,255,255)",
                "rgb(255,255,255)",
                "rgb(127,127,127)"
              ],
              "description": "文本颜色。\n<br>索引0、1、2、3分别对应默认、\n<br>悬停、按下时、禁用时文字颜色。",
              "name": "ht.textColor"
            },
            {
              "attr": "ht.borderWidth",
              "valueType": "PositiveNumber",
              "defaultValue": 1,
              "name": "边框宽度",
              "description": "边框宽度。"
            },
            {
              "attr": "ht.borderRadius",
              "valueType": "Number",
              "name": "边框圆角",
              "defaultValue": 3
            },
            {
              "attr": "ht.borderColor",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(255,255,255)",
                "rgb(255,255,255)",
                "rgb(255,255,255)",
                "rgb(200,200,200)"
              ],
              "name": "边框颜色",
              "description": "边框颜色。\n<br>索引0、1、2、3分别对应默认、\n<br>悬停、按下、禁用时边框颜色。"
            },
            {
              "attr": "background",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(55,125,255)",
                "rgba(55,125,255,0.9)",
                "rgba(55,125,255,0.8)",
                "rgb(200,200,200)"
              ],
              "description": "背景颜色。\n<br>索引与背景色对应如下：\n<br>0：默认背景色\n<br>1：悬停/划过背景色\n<br>2：按下背景色\n<br>3：禁用背景色",
              "name": "background"
            },
            {
              "attr": "darkStyle",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "深色风格。",
              "name": "darkStyle"
            },
            {
              "attr": "iconPath",
              "valueType": "Image",
              "description": "图标路径。",
              "name": "图标路径"
            },
            {
              "attr": "ht.iconPosition",
              "valueType": "Orientation",
              "name": "图标位置",
              "description": "图标位置。"
            },
            {
              "attr": "iconSize",
              "valueType": "NumberArray",
              "defaultValue": [
                20,
                20
              ],
              "name": "图标尺寸",
              "description": "索引0为宽度，索引1为高度。"
            },
            {
              "attr": "iconGap",
              "valueType": "PositiveNumber",
              "defaultValue": 5,
              "description": "图标与文字间距 。",
              "name": "iconGap"
            },
            {
              "attr": "icon-background",
              "valueType": "Color",
              "defaultValue": "rgb(255,255,255)",
              "name": "图标背景"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "ObjectArray",
              "defaultValue": [
                "func1"
              ],
              "group": "连线",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "ObjectArray",
              "defaultValue": [
                "a:exec"
              ],
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "defaultValue": [
                null
              ],
              "description": "",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "ObjectArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "ObjectArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type"
                ]
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "_bindEvents_0",
              "name": "连线事件_0",
              "valueType": "MultiComboBox",
              "defaultValue": "*",
              "group": "bindEvents",
              "description": "连线索引[0]的触发事件过滤器，默认全部通过",
              "dynamicCreate": true
            }
          ],
          "snapshotURL": "symbols/develop/uiotos/arranged/controls/forms_icon/普通按钮.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __button(data,gv,cache);}",
          "width": 80,
          "height": 42,
          "boundExtend": 2,
          "fitSize": true,
          "interactive": true,
          "pixelPerfect": false,
          "attachStyle": "close",
          "comps": [
            {
              "type": "components/develop/uiotos/base/button.json",
              "displayName": "button（button1）",
              "rect": [
                0,
                0,
                80,
                42
              ],
              "onDown": "__ht__function(event, data, view, point, width, height) {\nht.vector.buttonInteractor.onDown.apply(this, arguments);\n}",
              "onUp": "__ht__function(event, data, view, point, width, height) {\nht.vector.buttonInteractor.onUp.apply(this, arguments);\n}",
              "onEnter": "__ht__function(event, data, view, point, width, height) {\nht.vector.buttonInteractor.onEnter.apply(this, arguments);\n}",
              "onLeave": "__ht__function(event, data, view, point, width, height) {\nht.vector.buttonInteractor.onLeave.apply(this, arguments);\n}",
              "text": {
                "func": "attr@ht.text",
                "value": "BUTTON"
              },
              "disabled": {
                "func": "attr@ht.disabled",
                "value": false
              },
              "font": {
                "func": "attr@ht.font",
                "value": "12px arial, sans-serif"
              },
              "icon": {
                "func": "attr@iconPath"
              },
              "iconPosition": {
                "func": "attr@ht.iconPosition",
                "value": "left"
              },
              "iconWidth": {
                "func": "__ht__function(data, view) {\nlet wtmp = data.ca('ht.iconWidth'),\r\n    stmp = data.ca('iconSize');\r\nreturn wtmp ? wtmp : (stmp && stmp[0] ? stmp[0] : 20);\n}",
                "value": 20
              },
              "iconHeight": {
                "func": "__ht__function(data, view) {\nlet wtmp = data.ca('ht.iconHeight'),\r\nstmp = data.ca('iconSize');\r\nreturn wtmp ? wtmp : (stmp && stmp[1] ? stmp[1] : 20);\n}",
                "value": 20
              },
              "iconGap": {
                "func": "attr@iconGap",
                "value": 5
              },
              "textColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.textColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[0];\n}",
                "value": "rgb(255,255,255)"
              },
              "hoverTextColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.textColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[1];\n}"
              },
              "activeTextColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.textColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[2];\n}"
              },
              "disabledTextColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.textColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[3];\n}",
                "value": "#ebebeb"
              },
              "borderWidth": {
                "func": "attr@ht.borderWidth",
                "value": 0
              },
              "borderColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.borderColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[0];\n}",
                "value": null
              },
              "hoverBorderColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.borderColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[1];\n}"
              },
              "activeBorderColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.borderColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[2];\n}"
              },
              "disabledBorderColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.borderColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[3];\n}",
                "value": "rgba(235,235,235,0)"
              },
              "background": {
                "func": "__ht__function(data, view) {\nlet bkg = data.ca('ht.background'),\r\n    bkgs = data.ca('background');\r\nreturn bkg ? bkg : bkgs && bkgs[0];\n}",
                "value": "rgb(55,125,255)"
              },
              "hoverBackground": {
                "func": "__ht__function(data, view) {\nlet bkg = data.ca('ht.hoverBackground'),\r\n    bkgs = data.ca('background');\r\nreturn bkg ? bkg : bkgs && bkgs[1];\n}"
              },
              "activeBackground": {
                "func": "__ht__function(data, view) {\nlet bkg = data.ca('ht.activeBackground'),\r\n    bkgs = data.ca('background');\r\nreturn bkg ? bkg : bkgs && bkgs[2];\n}"
              },
              "disabledBackground": {
                "func": "__ht__function(data, view) {\nlet bkg = data.ca('ht.disabledBackground'),\r\n    bkgs = data.ca('background');\r\nreturn bkg ? bkg : bkgs && bkgs[3];\n}",
                "value": "#fafafa"
              },
              "borderRadius": {
                "func": "attr@ht.borderRadius",
                "value": "0"
              },
              "handleClick": {
                "func": "attr@clicked"
              },
              "getValue": "__ht__function(V){var R=T(Q,V);return R===N8&&X.properties&&(V=X.properties[V])?V.defaultValue:R}",
              "getColor": "__ht__function(V,R){return wm(!0===R?V:Q.getValue(V))}"
            }
          ],
          "uuid": "8C4ACDD0-1D2E-43F3-B74A-857F7AE67FB1"
        },
        "host": {
          "__i": 74110
        },
        "position": {
          "x": 971.48455,
          "y": 75.31247
        },
        "width": 71.22012,
        "height": 35
      },
      "s": {
        "label.opacity": 0,
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "2d.movable": false,
        "layout.h": "right",
        "layout.v": "top"
      },
      "a": {
        "icon-background": "rgb(255,255,255)",
        "symbol": "symbols/develop/uiotos/base/button.json",
        "background": [
          "rgb(51,153,255)",
          "#60ACFC",
          "#32D3EB",
          "rgb(200,200,200)"
        ],
        "ht.text": "接单",
        "ht.borderWidth": 0,
        "paramControlTag": [
          null
        ],
        "paramControlAttr": [
          null
        ],
        "bindControlsTag": [
          "func1"
        ],
        "bindControlsAttr": [
          "a:exec"
        ],
        "bindControlsVal": [
          null
        ],
        "_bindEvents_0": "*",
        "ht.borderColor": [
          "rgb(255,255,255)",
          "rgb(255,255,255)",
          "rgb(255,255,255)",
          "rgb(200,200,200)"
        ],
        "ht.textColor": [
          "rgb(255,255,255)",
          "rgb(255,255,255)",
          "rgb(255,255,255)",
          "rgb(200,200,200)"
        ]
      }
    },
    {
      "c": "ht.Edge",
      "i": 74132,
      "p": {
        "name": "edge",
        "displayName": "0（edge2）",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        连线配置信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：执行@func1</li> \n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li> \n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>",
        "parent": {
          "__i": 74131
        },
        "tag": "edge2",
        "source": {
          "__i": 74131
        },
        "target": {
          "__i": 74151
        }
      },
      "s": {
        "label": "",
        "edge.color": "rgb(51,153,255)",
        "edge.width": 4,
        "edge.type": "v.h",
        "edge.flex": 50,
        "edge.corner.radius": 0,
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "rgb(51,153,255)",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 0,
        "label.position": 33
      },
      "a": {
        "index": 0,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        连线配置信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：执行@func1</li> \n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li> \n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.Node",
      "i": 74133,
      "p": {
        "name": "btn",
        "displayName": "普通按钮（btn2）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "tag": "btn2",
        "dataBindings": {
          "a": {
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onFormClick": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_bindEvents_0": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Mon Jun 24 2024 07:35:01 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "ht.disabled",
              "valueType": "Boolean",
              "name": "禁用",
              "defaultValue": false,
              "description": "禁用",
              "group": "功能"
            },
            {
              "attr": "bindTabview",
              "valueType": "StringArray",
              "defaultValue": [
                "tab1",
                "0"
              ],
              "name": "bindTabview"
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "name": "userData"
            },
            {
              "attr": "onFormClick",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value",
                  "extra"
                ]
              },
              "description": "当点击时对外触发。",
              "name": "onFormClick"
            },
            {
              "attr": "clicked",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "event",
                  "data",
                  "view"
                ]
              },
              "defaultValue": "__ht__function(event, data, view) {setBindTabviewIndex(data,data.ca('bindTabview'));\r\ni.formEventBubblingUpper(\r\n    data,\r\n    view,\r\n    null,\r\n    'onFormClick',\r\n    null,\r\n    false\r\n);}",
              "name": "clicked"
            },
            {
              "attr": "fixedHeight",
              "valueType": "PositiveNumber",
              "group": "外观",
              "name": "fixedHeight"
            },
            {
              "attr": "ht.text",
              "valueType": "Multiline",
              "defaultValue": "按钮",
              "description": "文本。",
              "name": "ht.text"
            },
            {
              "attr": "ht.font",
              "valueType": "Font",
              "name": "字体",
              "description": "字体。"
            },
            {
              "attr": "ht.textColor",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(255,255,255)",
                "rgb(255,255,255)",
                "rgb(255,255,255)",
                "rgb(127,127,127)"
              ],
              "description": "文本颜色。\n<br>索引0、1、2、3分别对应默认、\n<br>悬停、按下时、禁用时文字颜色。",
              "name": "ht.textColor"
            },
            {
              "attr": "ht.borderWidth",
              "valueType": "PositiveNumber",
              "defaultValue": 1,
              "name": "边框宽度",
              "description": "边框宽度。"
            },
            {
              "attr": "ht.borderRadius",
              "valueType": "Number",
              "name": "边框圆角",
              "defaultValue": 3
            },
            {
              "attr": "ht.borderColor",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(255,255,255)",
                "rgb(255,255,255)",
                "rgb(255,255,255)",
                "rgb(200,200,200)"
              ],
              "name": "边框颜色",
              "description": "边框颜色。\n<br>索引0、1、2、3分别对应默认、\n<br>悬停、按下、禁用时边框颜色。"
            },
            {
              "attr": "background",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(55,125,255)",
                "rgba(55,125,255,0.9)",
                "rgba(55,125,255,0.8)",
                "rgb(200,200,200)"
              ],
              "description": "背景颜色。\n<br>索引与背景色对应如下：\n<br>0：默认背景色\n<br>1：悬停/划过背景色\n<br>2：按下背景色\n<br>3：禁用背景色",
              "name": "background"
            },
            {
              "attr": "darkStyle",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "深色风格。",
              "name": "darkStyle"
            },
            {
              "attr": "iconPath",
              "valueType": "Image",
              "description": "图标路径。",
              "name": "图标路径"
            },
            {
              "attr": "ht.iconPosition",
              "valueType": "Orientation",
              "name": "图标位置",
              "description": "图标位置。"
            },
            {
              "attr": "iconSize",
              "valueType": "NumberArray",
              "defaultValue": [
                20,
                20
              ],
              "name": "图标尺寸",
              "description": "索引0为宽度，索引1为高度。"
            },
            {
              "attr": "iconGap",
              "valueType": "PositiveNumber",
              "defaultValue": 5,
              "description": "图标与文字间距 。",
              "name": "iconGap"
            },
            {
              "attr": "icon-background",
              "valueType": "Color",
              "defaultValue": "rgb(255,255,255)",
              "name": "图标背景"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "ObjectArray",
              "defaultValue": [
                "func1"
              ],
              "group": "连线",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "ObjectArray",
              "defaultValue": [
                "a:exec"
              ],
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "defaultValue": [
                null
              ],
              "description": "",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "ObjectArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "ObjectArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type"
                ]
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "_bindEvents_0",
              "name": "连线事件_0",
              "valueType": "MultiComboBox",
              "defaultValue": "*",
              "group": "bindEvents",
              "description": "连线索引[0]的触发事件过滤器，默认全部通过",
              "dynamicCreate": true
            }
          ],
          "snapshotURL": "symbols/develop/uiotos/arranged/controls/forms_icon/普通按钮.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __button(data,gv,cache);}",
          "width": 80,
          "height": 42,
          "boundExtend": 2,
          "fitSize": true,
          "interactive": true,
          "pixelPerfect": false,
          "attachStyle": "close",
          "comps": [
            {
              "type": "components/develop/uiotos/base/button.json",
              "displayName": "button（button1）",
              "rect": [
                0,
                0,
                80,
                42
              ],
              "onDown": "__ht__function(event, data, view, point, width, height) {\nht.vector.buttonInteractor.onDown.apply(this, arguments);\n}",
              "onUp": "__ht__function(event, data, view, point, width, height) {\nht.vector.buttonInteractor.onUp.apply(this, arguments);\n}",
              "onEnter": "__ht__function(event, data, view, point, width, height) {\nht.vector.buttonInteractor.onEnter.apply(this, arguments);\n}",
              "onLeave": "__ht__function(event, data, view, point, width, height) {\nht.vector.buttonInteractor.onLeave.apply(this, arguments);\n}",
              "text": {
                "func": "attr@ht.text",
                "value": "BUTTON"
              },
              "disabled": {
                "func": "attr@ht.disabled",
                "value": false
              },
              "font": {
                "func": "attr@ht.font",
                "value": "12px arial, sans-serif"
              },
              "icon": {
                "func": "attr@iconPath"
              },
              "iconPosition": {
                "func": "attr@ht.iconPosition",
                "value": "left"
              },
              "iconWidth": {
                "func": "__ht__function(data, view) {\nlet wtmp = data.ca('ht.iconWidth'),\r\n    stmp = data.ca('iconSize');\r\nreturn wtmp ? wtmp : (stmp && stmp[0] ? stmp[0] : 20);\n}",
                "value": 20
              },
              "iconHeight": {
                "func": "__ht__function(data, view) {\nlet wtmp = data.ca('ht.iconHeight'),\r\nstmp = data.ca('iconSize');\r\nreturn wtmp ? wtmp : (stmp && stmp[1] ? stmp[1] : 20);\n}",
                "value": 20
              },
              "iconGap": {
                "func": "attr@iconGap",
                "value": 5
              },
              "textColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.textColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[0];\n}",
                "value": "rgb(255,255,255)"
              },
              "hoverTextColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.textColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[1];\n}"
              },
              "activeTextColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.textColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[2];\n}"
              },
              "disabledTextColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.textColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[3];\n}",
                "value": "#ebebeb"
              },
              "borderWidth": {
                "func": "attr@ht.borderWidth",
                "value": 0
              },
              "borderColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.borderColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[0];\n}",
                "value": null
              },
              "hoverBorderColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.borderColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[1];\n}"
              },
              "activeBorderColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.borderColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[2];\n}"
              },
              "disabledBorderColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.borderColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[3];\n}",
                "value": "rgba(235,235,235,0)"
              },
              "background": {
                "func": "__ht__function(data, view) {\nlet bkg = data.ca('ht.background'),\r\n    bkgs = data.ca('background');\r\nreturn bkg ? bkg : bkgs && bkgs[0];\n}",
                "value": "rgb(55,125,255)"
              },
              "hoverBackground": {
                "func": "__ht__function(data, view) {\nlet bkg = data.ca('ht.hoverBackground'),\r\n    bkgs = data.ca('background');\r\nreturn bkg ? bkg : bkgs && bkgs[1];\n}"
              },
              "activeBackground": {
                "func": "__ht__function(data, view) {\nlet bkg = data.ca('ht.activeBackground'),\r\n    bkgs = data.ca('background');\r\nreturn bkg ? bkg : bkgs && bkgs[2];\n}"
              },
              "disabledBackground": {
                "func": "__ht__function(data, view) {\nlet bkg = data.ca('ht.disabledBackground'),\r\n    bkgs = data.ca('background');\r\nreturn bkg ? bkg : bkgs && bkgs[3];\n}",
                "value": "#fafafa"
              },
              "borderRadius": {
                "func": "attr@ht.borderRadius",
                "value": "0"
              },
              "handleClick": {
                "func": "attr@clicked"
              },
              "getValue": "__ht__function(V){var R=T(Q,V);return R===N8&&X.properties&&(V=X.properties[V])?V.defaultValue:R}",
              "getColor": "__ht__function(V,R){return wm(!0===R?V:Q.getValue(V))}"
            }
          ],
          "uuid": "8C4ACDD0-1D2E-43F3-B74A-857F7AE67FB1"
        },
        "host": {
          "__i": 74110
        },
        "position": {
          "x": 1055.62735,
          "y": 75.31247
        },
        "width": 71.22012,
        "height": 35
      },
      "s": {
        "label.opacity": 0,
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "2d.movable": false,
        "layout.h": "right",
        "layout.v": "top"
      },
      "a": {
        "icon-background": "rgb(255,255,255)",
        "symbol": "symbols/develop/uiotos/base/button.json",
        "background": [
          "rgb(224,224,224)",
          "rgb(247,247,247)",
          "rgb(230,230,230)",
          "rgb(200,200,200)"
        ],
        "ht.textColor": [
          "rgb(61,61,61)",
          "rgb(61,61,61)",
          "rgb(61,61,61)",
          "rgb(61,61,61)"
        ],
        "ht.borderColor": [
          "rgb(255,255,255)",
          "rgb(255,255,255)",
          "rgb(255,255,255)",
          "rgb(127,127,127)"
        ],
        "ht.borderWidth": 0,
        "ht.text": "派单",
        "paramControlTag": [
          null
        ],
        "paramControlAttr": [
          null
        ],
        "bindControlsTag": [
          "func1"
        ],
        "bindControlsAttr": [
          "a:exec"
        ],
        "bindControlsVal": [
          null
        ],
        "_bindEvents_0": "*"
      }
    },
    {
      "c": "ht.Edge",
      "i": 74134,
      "p": {
        "name": "edge",
        "displayName": "0（edge3）",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        连线配置信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：执行@func1</li> \n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li> \n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>",
        "parent": {
          "__i": 74133
        },
        "tag": "edge3",
        "source": {
          "__i": 74133
        },
        "target": {
          "__i": 74151
        }
      },
      "s": {
        "label": "",
        "edge.color": "rgb(51,153,255)",
        "edge.width": 4,
        "edge.type": "v.h",
        "edge.flex": 50,
        "edge.corner.radius": 0,
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "rgb(51,153,255)",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 0,
        "label.position": 33
      },
      "a": {
        "index": 0,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        连线配置信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：执行@func1</li> \n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li> \n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.Node",
      "i": 74135,
      "p": {
        "name": "btn",
        "displayName": "普通按钮（btn3）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "tag": "btn3",
        "dataBindings": {
          "a": {
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onFormClick": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_bindEvents_0": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Mon Jun 24 2024 07:35:01 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "ht.disabled",
              "valueType": "Boolean",
              "name": "禁用",
              "defaultValue": false,
              "description": "禁用",
              "group": "功能"
            },
            {
              "attr": "bindTabview",
              "valueType": "StringArray",
              "defaultValue": [
                "tab1",
                "0"
              ],
              "name": "bindTabview"
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "name": "userData"
            },
            {
              "attr": "onFormClick",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value",
                  "extra"
                ]
              },
              "description": "当点击时对外触发。",
              "name": "onFormClick"
            },
            {
              "attr": "clicked",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "event",
                  "data",
                  "view"
                ]
              },
              "defaultValue": "__ht__function(event, data, view) {setBindTabviewIndex(data,data.ca('bindTabview'));\r\ni.formEventBubblingUpper(\r\n    data,\r\n    view,\r\n    null,\r\n    'onFormClick',\r\n    null,\r\n    false\r\n);}",
              "name": "clicked"
            },
            {
              "attr": "fixedHeight",
              "valueType": "PositiveNumber",
              "group": "外观",
              "name": "fixedHeight"
            },
            {
              "attr": "ht.text",
              "valueType": "Multiline",
              "defaultValue": "按钮",
              "description": "文本。",
              "name": "ht.text"
            },
            {
              "attr": "ht.font",
              "valueType": "Font",
              "name": "字体",
              "description": "字体。"
            },
            {
              "attr": "ht.textColor",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(255,255,255)",
                "rgb(255,255,255)",
                "rgb(255,255,255)",
                "rgb(127,127,127)"
              ],
              "description": "文本颜色。\n<br>索引0、1、2、3分别对应默认、\n<br>悬停、按下时、禁用时文字颜色。",
              "name": "ht.textColor"
            },
            {
              "attr": "ht.borderWidth",
              "valueType": "PositiveNumber",
              "defaultValue": 1,
              "name": "边框宽度",
              "description": "边框宽度。"
            },
            {
              "attr": "ht.borderRadius",
              "valueType": "Number",
              "name": "边框圆角",
              "defaultValue": 3
            },
            {
              "attr": "ht.borderColor",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(255,255,255)",
                "rgb(255,255,255)",
                "rgb(255,255,255)",
                "rgb(200,200,200)"
              ],
              "name": "边框颜色",
              "description": "边框颜色。\n<br>索引0、1、2、3分别对应默认、\n<br>悬停、按下、禁用时边框颜色。"
            },
            {
              "attr": "background",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(55,125,255)",
                "rgba(55,125,255,0.9)",
                "rgba(55,125,255,0.8)",
                "rgb(200,200,200)"
              ],
              "description": "背景颜色。\n<br>索引与背景色对应如下：\n<br>0：默认背景色\n<br>1：悬停/划过背景色\n<br>2：按下背景色\n<br>3：禁用背景色",
              "name": "background"
            },
            {
              "attr": "darkStyle",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "深色风格。",
              "name": "darkStyle"
            },
            {
              "attr": "iconPath",
              "valueType": "Image",
              "description": "图标路径。",
              "name": "图标路径"
            },
            {
              "attr": "ht.iconPosition",
              "valueType": "Orientation",
              "name": "图标位置",
              "description": "图标位置。"
            },
            {
              "attr": "iconSize",
              "valueType": "NumberArray",
              "defaultValue": [
                20,
                20
              ],
              "name": "图标尺寸",
              "description": "索引0为宽度，索引1为高度。"
            },
            {
              "attr": "iconGap",
              "valueType": "PositiveNumber",
              "defaultValue": 5,
              "description": "图标与文字间距 。",
              "name": "iconGap"
            },
            {
              "attr": "icon-background",
              "valueType": "Color",
              "defaultValue": "rgb(255,255,255)",
              "name": "图标背景"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "ObjectArray",
              "defaultValue": [
                "func1"
              ],
              "group": "连线",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "ObjectArray",
              "defaultValue": [
                "a:exec"
              ],
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "defaultValue": [
                null
              ],
              "description": "",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "ObjectArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "ObjectArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type"
                ]
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "_bindEvents_0",
              "name": "连线事件_0",
              "valueType": "MultiComboBox",
              "defaultValue": "*",
              "group": "bindEvents",
              "description": "连线索引[0]的触发事件过滤器，默认全部通过",
              "dynamicCreate": true
            }
          ],
          "snapshotURL": "symbols/develop/uiotos/arranged/controls/forms_icon/普通按钮.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __button(data,gv,cache);}",
          "width": 80,
          "height": 42,
          "boundExtend": 2,
          "fitSize": true,
          "interactive": true,
          "pixelPerfect": false,
          "attachStyle": "close",
          "comps": [
            {
              "type": "components/develop/uiotos/base/button.json",
              "displayName": "button（button1）",
              "rect": [
                0,
                0,
                80,
                42
              ],
              "onDown": "__ht__function(event, data, view, point, width, height) {\nht.vector.buttonInteractor.onDown.apply(this, arguments);\n}",
              "onUp": "__ht__function(event, data, view, point, width, height) {\nht.vector.buttonInteractor.onUp.apply(this, arguments);\n}",
              "onEnter": "__ht__function(event, data, view, point, width, height) {\nht.vector.buttonInteractor.onEnter.apply(this, arguments);\n}",
              "onLeave": "__ht__function(event, data, view, point, width, height) {\nht.vector.buttonInteractor.onLeave.apply(this, arguments);\n}",
              "text": {
                "func": "attr@ht.text",
                "value": "BUTTON"
              },
              "disabled": {
                "func": "attr@ht.disabled",
                "value": false
              },
              "font": {
                "func": "attr@ht.font",
                "value": "12px arial, sans-serif"
              },
              "icon": {
                "func": "attr@iconPath"
              },
              "iconPosition": {
                "func": "attr@ht.iconPosition",
                "value": "left"
              },
              "iconWidth": {
                "func": "__ht__function(data, view) {\nlet wtmp = data.ca('ht.iconWidth'),\r\n    stmp = data.ca('iconSize');\r\nreturn wtmp ? wtmp : (stmp && stmp[0] ? stmp[0] : 20);\n}",
                "value": 20
              },
              "iconHeight": {
                "func": "__ht__function(data, view) {\nlet wtmp = data.ca('ht.iconHeight'),\r\nstmp = data.ca('iconSize');\r\nreturn wtmp ? wtmp : (stmp && stmp[1] ? stmp[1] : 20);\n}",
                "value": 20
              },
              "iconGap": {
                "func": "attr@iconGap",
                "value": 5
              },
              "textColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.textColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[0];\n}",
                "value": "rgb(255,255,255)"
              },
              "hoverTextColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.textColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[1];\n}"
              },
              "activeTextColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.textColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[2];\n}"
              },
              "disabledTextColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.textColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[3];\n}",
                "value": "#ebebeb"
              },
              "borderWidth": {
                "func": "attr@ht.borderWidth",
                "value": 0
              },
              "borderColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.borderColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[0];\n}",
                "value": null
              },
              "hoverBorderColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.borderColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[1];\n}"
              },
              "activeBorderColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.borderColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[2];\n}"
              },
              "disabledBorderColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.borderColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[3];\n}",
                "value": "rgba(235,235,235,0)"
              },
              "background": {
                "func": "__ht__function(data, view) {\nlet bkg = data.ca('ht.background'),\r\n    bkgs = data.ca('background');\r\nreturn bkg ? bkg : bkgs && bkgs[0];\n}",
                "value": "rgb(55,125,255)"
              },
              "hoverBackground": {
                "func": "__ht__function(data, view) {\nlet bkg = data.ca('ht.hoverBackground'),\r\n    bkgs = data.ca('background');\r\nreturn bkg ? bkg : bkgs && bkgs[1];\n}"
              },
              "activeBackground": {
                "func": "__ht__function(data, view) {\nlet bkg = data.ca('ht.activeBackground'),\r\n    bkgs = data.ca('background');\r\nreturn bkg ? bkg : bkgs && bkgs[2];\n}"
              },
              "disabledBackground": {
                "func": "__ht__function(data, view) {\nlet bkg = data.ca('ht.disabledBackground'),\r\n    bkgs = data.ca('background');\r\nreturn bkg ? bkg : bkgs && bkgs[3];\n}",
                "value": "#fafafa"
              },
              "borderRadius": {
                "func": "attr@ht.borderRadius",
                "value": "0"
              },
              "handleClick": {
                "func": "attr@clicked"
              },
              "getValue": "__ht__function(V){var R=T(Q,V);return R===N8&&X.properties&&(V=X.properties[V])?V.defaultValue:R}",
              "getColor": "__ht__function(V,R){return wm(!0===R?V:Q.getValue(V))}"
            }
          ],
          "uuid": "8C4ACDD0-1D2E-43F3-B74A-857F7AE67FB1"
        },
        "host": {
          "__i": 74110
        },
        "position": {
          "x": 1139.77014,
          "y": 75.31247
        },
        "width": 71.22012,
        "height": 35
      },
      "s": {
        "label.opacity": 0,
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "2d.movable": false,
        "layout.h": "right",
        "layout.v": "top"
      },
      "a": {
        "icon-background": "rgb(255,255,255)",
        "symbol": "symbols/develop/uiotos/base/button.json",
        "background": [
          "rgb(224,224,224)",
          "rgb(247,247,247)",
          "rgb(230,230,230)",
          "rgb(200,200,200)"
        ],
        "ht.textColor": [
          "rgb(61,61,61)",
          "rgb(61,61,61)",
          "rgb(61,61,61)",
          "rgb(61,61,61)"
        ],
        "ht.borderColor": [
          "rgb(255,255,255)",
          "rgb(255,255,255)",
          "rgb(255,255,255)",
          "rgb(127,127,127)"
        ],
        "ht.borderWidth": 0,
        "ht.text": "跳过",
        "paramControlTag": [
          null
        ],
        "paramControlAttr": [
          null
        ],
        "bindControlsTag": [
          "func1"
        ],
        "bindControlsAttr": [
          "a:exec"
        ],
        "bindControlsVal": [
          null
        ],
        "_bindEvents_0": "*"
      }
    },
    {
      "c": "ht.Edge",
      "i": 74136,
      "p": {
        "name": "edge",
        "displayName": "0（edge4）",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        连线配置信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：执行@func1</li> \n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li> \n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>",
        "parent": {
          "__i": 74135
        },
        "tag": "edge4",
        "source": {
          "__i": 74135
        },
        "target": {
          "__i": 74151
        }
      },
      "s": {
        "label": "",
        "edge.color": "rgb(51,153,255)",
        "edge.width": 4,
        "edge.type": "v.h",
        "edge.flex": 50,
        "edge.corner.radius": 0,
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "rgb(51,153,255)",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 0,
        "label.position": 33
      },
      "a": {
        "index": 0,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        连线配置信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：执行@func1</li> \n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li> \n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.Node",
      "i": 74137,
      "p": {
        "name": "btn",
        "displayName": "普通按钮（btn4）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "tag": "btn4",
        "dataBindings": {
          "a": {
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onFormClick": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_bindEvents_0": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Mon Jun 24 2024 07:35:01 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "ht.disabled",
              "valueType": "Boolean",
              "name": "禁用",
              "defaultValue": false,
              "description": "禁用",
              "group": "功能"
            },
            {
              "attr": "bindTabview",
              "valueType": "StringArray",
              "defaultValue": [
                "tab1",
                "0"
              ],
              "name": "bindTabview"
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "name": "userData"
            },
            {
              "attr": "onFormClick",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value",
                  "extra"
                ]
              },
              "description": "当点击时对外触发。",
              "name": "onFormClick"
            },
            {
              "attr": "clicked",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "event",
                  "data",
                  "view"
                ]
              },
              "defaultValue": "__ht__function(event, data, view) {setBindTabviewIndex(data,data.ca('bindTabview'));\r\ni.formEventBubblingUpper(\r\n    data,\r\n    view,\r\n    null,\r\n    'onFormClick',\r\n    null,\r\n    false\r\n);}",
              "name": "clicked"
            },
            {
              "attr": "fixedHeight",
              "valueType": "PositiveNumber",
              "group": "外观",
              "name": "fixedHeight"
            },
            {
              "attr": "ht.text",
              "valueType": "Multiline",
              "defaultValue": "按钮",
              "description": "文本。",
              "name": "ht.text"
            },
            {
              "attr": "ht.font",
              "valueType": "Font",
              "name": "字体",
              "description": "字体。"
            },
            {
              "attr": "ht.textColor",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(255,255,255)",
                "rgb(255,255,255)",
                "rgb(255,255,255)",
                "rgb(127,127,127)"
              ],
              "description": "文本颜色。\n<br>索引0、1、2、3分别对应默认、\n<br>悬停、按下时、禁用时文字颜色。",
              "name": "ht.textColor"
            },
            {
              "attr": "ht.borderWidth",
              "valueType": "PositiveNumber",
              "defaultValue": 1,
              "name": "边框宽度",
              "description": "边框宽度。"
            },
            {
              "attr": "ht.borderRadius",
              "valueType": "Number",
              "name": "边框圆角",
              "defaultValue": 3
            },
            {
              "attr": "ht.borderColor",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(255,255,255)",
                "rgb(255,255,255)",
                "rgb(255,255,255)",
                "rgb(200,200,200)"
              ],
              "name": "边框颜色",
              "description": "边框颜色。\n<br>索引0、1、2、3分别对应默认、\n<br>悬停、按下、禁用时边框颜色。"
            },
            {
              "attr": "background",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(55,125,255)",
                "rgba(55,125,255,0.9)",
                "rgba(55,125,255,0.8)",
                "rgb(200,200,200)"
              ],
              "description": "背景颜色。\n<br>索引与背景色对应如下：\n<br>0：默认背景色\n<br>1：悬停/划过背景色\n<br>2：按下背景色\n<br>3：禁用背景色",
              "name": "background"
            },
            {
              "attr": "darkStyle",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "深色风格。",
              "name": "darkStyle"
            },
            {
              "attr": "iconPath",
              "valueType": "Image",
              "description": "图标路径。",
              "name": "图标路径"
            },
            {
              "attr": "ht.iconPosition",
              "valueType": "Orientation",
              "name": "图标位置",
              "description": "图标位置。"
            },
            {
              "attr": "iconSize",
              "valueType": "NumberArray",
              "defaultValue": [
                20,
                20
              ],
              "name": "图标尺寸",
              "description": "索引0为宽度，索引1为高度。"
            },
            {
              "attr": "iconGap",
              "valueType": "PositiveNumber",
              "defaultValue": 5,
              "description": "图标与文字间距 。",
              "name": "iconGap"
            },
            {
              "attr": "icon-background",
              "valueType": "Color",
              "defaultValue": "rgb(255,255,255)",
              "name": "图标背景"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "ObjectArray",
              "defaultValue": [
                "func1"
              ],
              "group": "连线",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "ObjectArray",
              "defaultValue": [
                "a:exec"
              ],
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "defaultValue": [
                null
              ],
              "description": "",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "ObjectArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "ObjectArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type"
                ]
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "_bindEvents_0",
              "name": "连线事件_0",
              "valueType": "MultiComboBox",
              "defaultValue": "*",
              "group": "bindEvents",
              "description": "连线索引[0]的触发事件过滤器，默认全部通过",
              "dynamicCreate": true
            }
          ],
          "snapshotURL": "symbols/develop/uiotos/arranged/controls/forms_icon/普通按钮.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __button(data,gv,cache);}",
          "width": 80,
          "height": 42,
          "boundExtend": 2,
          "fitSize": true,
          "interactive": true,
          "pixelPerfect": false,
          "attachStyle": "close",
          "comps": [
            {
              "type": "components/develop/uiotos/base/button.json",
              "displayName": "button（button1）",
              "rect": [
                0,
                0,
                80,
                42
              ],
              "onDown": "__ht__function(event, data, view, point, width, height) {\nht.vector.buttonInteractor.onDown.apply(this, arguments);\n}",
              "onUp": "__ht__function(event, data, view, point, width, height) {\nht.vector.buttonInteractor.onUp.apply(this, arguments);\n}",
              "onEnter": "__ht__function(event, data, view, point, width, height) {\nht.vector.buttonInteractor.onEnter.apply(this, arguments);\n}",
              "onLeave": "__ht__function(event, data, view, point, width, height) {\nht.vector.buttonInteractor.onLeave.apply(this, arguments);\n}",
              "text": {
                "func": "attr@ht.text",
                "value": "BUTTON"
              },
              "disabled": {
                "func": "attr@ht.disabled",
                "value": false
              },
              "font": {
                "func": "attr@ht.font",
                "value": "12px arial, sans-serif"
              },
              "icon": {
                "func": "attr@iconPath"
              },
              "iconPosition": {
                "func": "attr@ht.iconPosition",
                "value": "left"
              },
              "iconWidth": {
                "func": "__ht__function(data, view) {\nlet wtmp = data.ca('ht.iconWidth'),\r\n    stmp = data.ca('iconSize');\r\nreturn wtmp ? wtmp : (stmp && stmp[0] ? stmp[0] : 20);\n}",
                "value": 20
              },
              "iconHeight": {
                "func": "__ht__function(data, view) {\nlet wtmp = data.ca('ht.iconHeight'),\r\nstmp = data.ca('iconSize');\r\nreturn wtmp ? wtmp : (stmp && stmp[1] ? stmp[1] : 20);\n}",
                "value": 20
              },
              "iconGap": {
                "func": "attr@iconGap",
                "value": 5
              },
              "textColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.textColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[0];\n}",
                "value": "rgb(255,255,255)"
              },
              "hoverTextColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.textColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[1];\n}"
              },
              "activeTextColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.textColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[2];\n}"
              },
              "disabledTextColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.textColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[3];\n}",
                "value": "#ebebeb"
              },
              "borderWidth": {
                "func": "attr@ht.borderWidth",
                "value": 0
              },
              "borderColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.borderColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[0];\n}",
                "value": null
              },
              "hoverBorderColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.borderColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[1];\n}"
              },
              "activeBorderColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.borderColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[2];\n}"
              },
              "disabledBorderColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.borderColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[3];\n}",
                "value": "rgba(235,235,235,0)"
              },
              "background": {
                "func": "__ht__function(data, view) {\nlet bkg = data.ca('ht.background'),\r\n    bkgs = data.ca('background');\r\nreturn bkg ? bkg : bkgs && bkgs[0];\n}",
                "value": "rgb(55,125,255)"
              },
              "hoverBackground": {
                "func": "__ht__function(data, view) {\nlet bkg = data.ca('ht.hoverBackground'),\r\n    bkgs = data.ca('background');\r\nreturn bkg ? bkg : bkgs && bkgs[1];\n}"
              },
              "activeBackground": {
                "func": "__ht__function(data, view) {\nlet bkg = data.ca('ht.activeBackground'),\r\n    bkgs = data.ca('background');\r\nreturn bkg ? bkg : bkgs && bkgs[2];\n}"
              },
              "disabledBackground": {
                "func": "__ht__function(data, view) {\nlet bkg = data.ca('ht.disabledBackground'),\r\n    bkgs = data.ca('background');\r\nreturn bkg ? bkg : bkgs && bkgs[3];\n}",
                "value": "#fafafa"
              },
              "borderRadius": {
                "func": "attr@ht.borderRadius",
                "value": "0"
              },
              "handleClick": {
                "func": "attr@clicked"
              },
              "getValue": "__ht__function(V){var R=T(Q,V);return R===N8&&X.properties&&(V=X.properties[V])?V.defaultValue:R}",
              "getColor": "__ht__function(V,R){return wm(!0===R?V:Q.getValue(V))}"
            }
          ],
          "uuid": "8C4ACDD0-1D2E-43F3-B74A-857F7AE67FB1"
        },
        "host": {
          "__i": 74110
        },
        "position": {
          "x": 1223.91293,
          "y": 75.31247
        },
        "width": 71.22012,
        "height": 35
      },
      "s": {
        "label.opacity": 0,
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "2d.movable": false,
        "layout.h": "right",
        "layout.v": "top"
      },
      "a": {
        "icon-background": "rgb(255,255,255)",
        "symbol": "symbols/develop/uiotos/base/button.json",
        "background": [
          "rgb(224,224,224)",
          "rgb(247,247,247)",
          "rgb(230,230,230)",
          "rgb(200,200,200)"
        ],
        "ht.textColor": [
          "rgb(61,61,61)",
          "rgb(61,61,61)",
          "rgb(61,61,61)",
          "rgb(61,61,61)"
        ],
        "ht.borderColor": [
          "rgb(255,255,255)",
          "rgb(255,255,255)",
          "rgb(255,255,255)",
          "rgb(127,127,127)"
        ],
        "ht.borderWidth": 0,
        "ht.text": "查看",
        "paramControlTag": [
          null
        ],
        "paramControlAttr": [
          null
        ],
        "bindControlsTag": [
          "func1"
        ],
        "bindControlsAttr": [
          "a:exec"
        ],
        "bindControlsVal": [
          null
        ],
        "_bindEvents_0": "*"
      }
    },
    {
      "c": "ht.Edge",
      "i": 74138,
      "p": {
        "name": "edge",
        "displayName": "0（edge5）",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        连线配置信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：执行@func1</li> \n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li> \n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>",
        "parent": {
          "__i": 74137
        },
        "tag": "edge5",
        "source": {
          "__i": 74137
        },
        "target": {
          "__i": 74151
        }
      },
      "s": {
        "label": "",
        "edge.color": "rgb(51,153,255)",
        "edge.width": 4,
        "edge.type": "v.h",
        "edge.flex": 50,
        "edge.corner.radius": 0,
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "rgb(51,153,255)",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 0,
        "label.position": 33
      },
      "a": {
        "index": 0,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        连线配置信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：执行@func1</li> \n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li> \n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.UGrid",
      "i": 74139,
      "p": {
        "name": "grid",
        "displayName": "网格组合（grid1）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "tag": "grid1",
        "dataBindings": {
          "a": {
            "datas": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "grid.row.count": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "grid.column.count": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "rowIndex": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "columnIndex": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "removeOthers": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "grid.row.percents": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "grid.auto.fill": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "grid.column.percents": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "grid.gap": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "valueGet": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "itemsGet": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Fri Jun 07 2024 21:06:26 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "组件地址",
              "description": "显示组件地址，无需填写。通常仅当公共属性组件源值为对象类型时，组件源属性中原先存放的地址字符串会转存到当前属性上。"
            },
            {
              "attr": "userData",
              "valueType": "ObjectArray",
              "group": "数据",
              "description": "用户数据。\n<br>用于存放任意用户自定义数据。",
              "name": "userData"
            },
            {
              "attr": "grid.row.count",
              "valueType": "PositiveNumber",
              "defaultValue": 1,
              "group": "外观",
              "description": "网格行数",
              "name": "grid.row.count"
            },
            {
              "attr": "grid.column.count",
              "valueType": "PositiveNumber",
              "defaultValue": 4,
              "description": "网格列数",
              "name": "grid.column.count"
            },
            {
              "attr": "rowIndex",
              "valueType": "Number",
              "description": "指定行索引。\n<br>网格内的组件，选择指定行（rowIndex）、\n<br>列（columnIndex）的用于显示， 其他\n<br>的移除掉。默认值-1相当于未选定。",
              "defaultValue": -1,
              "name": "rowIndex"
            },
            {
              "attr": "columnIndex",
              "valueType": "Number",
              "description": "指定列索引。\n<br>网格内的组件，选择指定行（rowIndex）、\n<br>列（columnIndex）的用于显示，其他\n<br>的移除掉。默认值-1相当于未选定。",
              "defaultValue": -1,
              "name": "columnIndex"
            },
            {
              "attr": "removeOthers",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "是否移出非指定项。\n<br>与指定行（rowIndex）、指定列（columnIndex）配合使用，\n<br>当指定某个行列的项后，是否移除网格内的所有其他项。默\n<br>认不勾选。",
              "name": "removeOthers"
            },
            {
              "attr": "grid.auto.fill",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "增大行或列时，多出的格子是否自动（按照最后一个子组件）进行填充。",
              "name": "grid.auto.fill"
            },
            {
              "attr": "grid.border",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                0,
                0,
                0
              ],
              "description": "网格布局中组件与四周的边距，数组的索引从0到3，\n<br>依次对应上边距、右边距、下边距、左边距。\n<br>更多可参见node.margin.h",
              "name": "grid.border"
            },
            {
              "attr": "grid.gap",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "网格布局中各行与各列统一的间距，\n<br>注意，不包括边距（由grid.border属性决定）。\n<br>更多可参见node.margin.h",
              "name": "grid.gap"
            },
            {
              "attr": "grid.column.percents",
              "valueType": "NumberArray",
              "description": "设置布局的组件中，从左到右每列的宽度。具体数值意义如下：\n<br>● 大于1时，表明绝对像素宽度。比如200，表示当前列宽为200px\n<br>● 等于1时，除去所有设置了绝对宽度以及相应列间距之外，网格组件\n<br>   剩余的总宽度作为当前列宽。\n<br>● 大于0且小于1时，除了绝对像素宽度外和行间距外，剩余总宽度以\n<br>   当前值作为比例对应为当前列宽。比如0.2，剩余宽度总和为100时，\n<br>   当前列宽为20。通常值小数的列，数值相加要为1。\n<br>● 等于0或者undefined未设置值时，默认与其他同样设置了0或未设置\n<br>   参数的列，平分剩余总宽度。比如有4列，当前网格组件总宽度100px，\n<br>   属性设置为[0,40,0,0]时，表明第二列固定宽度为40px，第一、三、四\n<br>   列宽度相同，分别为20（间距、边距相关属性均为0时）。\n<br>● 等于-1时，隐藏当前列（不显示）。注意，如果有多列设置了-1，那么\n<br>   从左到右第一个设置了-1的列才会生效。",
              "name": "grid.column.percents"
            },
            {
              "attr": "grid.row.percents",
              "valueType": "NumberArray",
              "description": "参见列宽百分比属性grid.column.percents，宽度换成高度，\n<br>列换成行即可，值意义可完全参考。注意，网格的子组件\n<br>才能被网格布局。\n<br>\n",
              "name": "grid.row.percents"
            },
            {
              "attr": "node.margin.h",
              "valueType": "Number",
              "defaultValue": 15,
              "description": "列的内容区域与列左右两侧的边距。四周边距（grid.border）、\n<br>内容间距（node.margin.h、node.margin.v）、行列间距（grid.gap）\n<br>之间的区别。当前网格组件的宽度 = \n<br>两边边距（grid.border属性中序号1和3的值） + \n<br>所有列实际展示区域的宽度总和 + \n<br>所有列两边的内容间距（node.margin.h ×2 × 列数）+ \n<br>列之间的间距（grid.gap × (列数 - 1)）",
              "name": "node.margin.h"
            },
            {
              "attr": "node.margin.v",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "行内容区域与行上下两侧的边距。更多可参见node.margin.h",
              "name": "node.margin.v"
            },
            {
              "attr": "borderColor",
              "valueType": "Color",
              "defaultValue": "rgba(55,125,255,0.20)",
              "description": "网格组件边框颜色。",
              "name": "borderColor"
            },
            {
              "attr": "borderWidth",
              "valueType": "Number",
              "defaultValue": 3,
              "description": "网格组件边框宽度。注意，宽度为3时（默认值），\n<br>边框仅编辑状态可见，运行时不可见。其他边框值，\n<br>运行状态也可见。",
              "name": "borderWidth"
            },
            {
              "attr": "background",
              "valueType": "Color",
              "description": "网格组件背景颜色。",
              "name": "background"
            },
            {
              "attr": "onChange",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value",
                  "extra"
                ]
              },
              "defaultValue": "__ht__function(data, gv, cache, value, extra) {}",
              "group": "事件",
              "name": "onChange"
            },
            {
              "attr": "enable",
              "valueType": "Boolean",
              "defaultValue": false,
              "description": "开启功能，此时会触发sizeSet属性当前配置生效。",
              "group": "下拉级联",
              "name": "enable"
            },
            {
              "attr": "datas",
              "valueType": "ObjectArray",
              "description": "用于通过网格内下拉框，接收存放多条\n<br>数据记录集，通常为数据库返回结\n<br>果，数组每个对象的字段名称和数\n<br>量通常一致，仅数据不同。",
              "defaultValue": [],
              "name": "datas"
            },
            {
              "attr": "sizeSet",
              "valueType": "PositiveNumber",
              "defaultValue": 0,
              "description": "字段数量设置。设置数值，并且在enable属性开启时，在下发会动态新增\n指定数量的名称为__field_x的字符串类型属性，x标记从0开始，与布局行\n中的组合框从左到右依次对应。\n<br>其中属性值为字段字符串名称。比如当属性__field_2设置为\"name\"时，\n返回数据列表中\"name\"字段的值（去掉重复后的）列表，将被放入到从左\n到右的第3个（从0开始的索引序号为2）组合框中作为下拉选项。\n<br>简言之，sizeSet对应几个字段或者几个组合框；动态属性__field_x名\n称中的x对应哪个组合框，而属性值则为数据字段。\n<br>以此实现动态多个组合框与返回数据的字段依次对应，并且将数据填\n充到各个组合框中作为下拉值并支持级联。",
              "name": "sizeSet"
            },
            {
              "attr": "valueGet",
              "valueType": "Object",
              "description": "当前值。值为被布局的这行组合框各自按照对应的字段\n<br>名称和值构成的json对象。对于原数据（datas属性值）\n<br>中有，但是组合框没有对应的字段，将不会在值中体现。",
              "defaultValue": null,
              "name": "valueGet"
            },
            {
              "attr": "itemsGet",
              "valueType": "Object",
              "description": "当前值（列表），类似valueGet，不过包含了原数据中的所有字段\n<br>（即便有些字段没有对应到组合框），以及满足这些字段值的所有数据集。\n<br>相当于以这一行组合框选定的值作为查询条件，得到满足条件的所有数据\n<br>记录。从这个角度说，valueGet相当于是查询条件本身（字段和值组成的对象\n<br>），itemsGet是查询结果（原始数据满足条件的列表集合）。",
              "defaultValue": null,
              "name": "itemsGet"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "连线",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "StringArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "静态值。也用作数组索引、JSON对象解析提取值用途。\n<br>一、静态值用途：\n<br>对常规类型的属性赋值且没有反向关联属性值，传入为数值时，不\n<br>会作为数组的索引，而会当成常量值对外赋值。此外，存在特殊值：\n<br>~和undefined表示过滤、不触发；null为默认值，表示传递默认表\n<br>单数据。编辑状态下清空后保存与设置null等价。\n<br>二、数组索引用途\n<br>情况1：被操作的组件属性原先值是数组时（包括空数组），会将\n<br>待输出的值作为被操作数组指定索引的值来传入，而不是整体覆盖。\n<br>情况2：如果要被操作的组件属性原先值不是数组，而且待输出的\n<br>值为数组类型并且长度也在索引范围内，那么会按照索引取自身数\n<br>组指定元素再对外输出。（如果想要取待输出索引值，赋值给被操\n<br>纵属性的指定索引，那么需要中间组件属性连线过渡以下，无法直\n<br>接操作）\n<br>情况3：如果要被操作的组件属性是数组，而且待输出的值也是数组\n<br>类型，此时当情况1来处理。\n<br>三、数据解析用途：\n<br>待输出的值为JSON对象时，用x.y.z这种以字符.或者>为间隔的方式\n<br>实现对JSON字段层次逐层定位，当是数组时x.0.y.1这种以数字的方\n<br>式来指定数组的某个索引。以此实现对任意结果JSON对象字段的定\n<br>位，获取结构内指定字段对应的值。",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "StringArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form,type,inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ]
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "display",
              "valueType": "Image",
              "defaultValue": "",
              "description": "自定义页面地址。\n                可以是编辑器中的其他页面，也可以\n                是外部网页链接地址。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "display",
              "dynamicCreate": true
            },
            {
              "attr": "pureTipText",
              "valueType": "String",
              "defaultValue": "",
              "description": "提示文字。\n                    当专业用户属性中，提供display内嵌页属性，\n                    如果有配置，那么本属性设置无效，将以内嵌\n                    页显示为准。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "pureTipText",
              "dynamicCreate": true
            },
            {
              "attr": "popDirection",
              "valueType": "SideDirection",
              "defaultValue": "right",
              "description": "提示显示位置。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popDirection",
              "dynamicCreate": true
            },
            {
              "attr": "popBackground",
              "valueType": "Color",
              "defaultValue": "white",
              "description": "箭头和背景色。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popBackground",
              "dynamicCreate": true
            },
            {
              "attr": "popPadding",
              "valueType": "NumberArray",
              "defaultValue": [
                2,
                2,
                2,
                2
              ],
              "description": "内间距。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popPadding",
              "dynamicCreate": true
            },
            {
              "attr": "popWidth",
              "valueType": "Number",
              "defaultValue": 400,
              "description": "弹出框宽度。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popWidth",
              "dynamicCreate": true
            },
            {
              "attr": "popHeight",
              "valueType": "Number",
              "defaultValue": 300,
              "description": "弹出框高度。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popHeight",
              "dynamicCreate": true
            },
            {
              "attr": "popBorderColor",
              "valueType": "Color",
              "defaultValue": "rgb(51,51,51)",
              "description": "边框线颜色。\n                    注意，是设置了边框宽度非0后的边框颜色。\n                    默认边框宽度属性为0时，实际上是白色并\n                    带有箭头指示的边框。本属性不用于修改默\n                    认边框色。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popBorderColor",
              "dynamicCreate": true
            },
            {
              "attr": "popBorderWidth",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "边框线宽度。\n                    默认值为0，此时边框默认为白色并且带有\n                    箭头指示。当设置宽度后，颜色将取边框颜\n                    色属性的设置，并且不再有箭头指示。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popBorderWidth",
              "dynamicCreate": true
            },
            {
              "attr": "popBorderRadius",
              "valueType": "Number",
              "defaultValue": 0,
              "description": "边框线圆角。\n                    设置圆角线后，如果此前默认是白色边框带有\n                    指示箭头，那么将自动不可见，只对内容区域\n                    产生圆角。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popBorderRadius",
              "dynamicCreate": true
            },
            {
              "attr": "popTriggerEvent",
              "valueType": "MouseEvent",
              "defaultValue": "hover",
              "description": "触发方式。\n                支持鼠标移入、点击（按钮时）\n                两种触发提示的方式。",
              "group": "弹出框 *",
              "bindIgnored": true,
              "name": "popTriggerEvent",
              "dynamicCreate": true
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            }
          ],
          "snapshotURL": "symbols\\develop\\uiotos\\arranged\\controls\\forms_icon\\网格.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __grid(data,gv,cache);}",
          "width": 100,
          "height": 100,
          "fitSize": true,
          "scrollable": true,
          "pixelPerfect": false,
          "comps": [
            {
              "type": "rect",
              "background": {
                "func": "attr@background",
                "value": null
              },
              "borderWidth": {
                "func": "attr@borderWidth",
                "value": 0
              },
              "borderColor": {
                "func": "attr@borderColor",
                "value": "rgb(55,125,255)"
              },
              "borderWidthAbsolute": true,
              "displayName": "n（n1）",
              "rect": [
                0,
                0,
                100,
                100
              ]
            }
          ],
          "uuid": "FE2B3E01-A257-4805-BC99-61DAF56B5F25"
        },
        "host": {
          "__i": 74110
        },
        "position": {
          "x": 544.34612,
          "y": 356.96704
        },
        "width": 1430.35373,
        "height": 385.71993
      },
      "s": {
        "label.opacity": 0,
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "grid.gap": 30,
        "grid.borderRadius": 10,
        "interactive": true,
        "grid.border": -30,
        "2d.movable": false,
        "grid.row.percents": [
          70,
          70,
          70,
          70
        ],
        "layout.h": "leftright",
        "layout.v": "topbottom"
      },
      "a": {
        "grid.row.count": 4,
        "grid.column.count": 3,
        "grid.border": 0,
        "symbol": "symbols/develop/uiotos/base/grid.json",
        "grid.auto.fill": false,
        "node.margin.h": 0,
        "borderWidth": 0,
        "grid.gap": 30,
        "grid.row.percents": [
          70,
          70,
          70,
          70
        ]
      }
    },
    {
      "c": "ht.Node",
      "i": 74140,
      "p": {
        "name": "gv",
        "displayName": "嵌套容器（gv4）",
        "toolTip": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "parent": {
          "__i": 74139
        },
        "tag": "gv4",
        "dataBindings": {
          "a": {
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "innerLayoutMode": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "innerBackground": {
              "id": "iotos.form",
              "alias": "",
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        console.error(3333333333,rawData)\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "idinfo": "",
              "isTplBinded": false
            },
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Thu Jul 04 2024 21:25:46 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "display",
              "valueType": "URL",
              "group": "功能",
              "name": "display"
            },
            {
              "attr": "displayJson",
              "valueType": "Multiline",
              "description": "",
              "extraInfo": "*",
              "name": "displayJson"
            },
            {
              "attr": "innerLayoutMode",
              "valueType": "InnerLayoutMode",
              "defaultValue": "none",
              "description": "",
              "name": "innerLayoutMode"
            },
            {
              "attr": "onPostDeserialize",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "json",
                  "dm",
                  "gv",
                  "datas"
                ],
                "classify": "*"
              },
              "description": "",
              "name": "onPostDeserialize"
            },
            {
              "attr": "useOriginSize",
              "valueType": "Boolean",
              "defaultValue": false,
              "extraInfo": "★",
              "description": "",
              "name": "useOriginSize"
            },
            {
              "attr": "useInnerEventsAll",
              "valueType": "Boolean",
              "description": "",
              "extraInfo": "*",
              "name": "useInnerEventsAll"
            },
            {
              "attr": "isLoadingGet",
              "valueType": "Boolean",
              "description": "",
              "defaultValue": false,
              "extraInfo": "★",
              "name": "isLoadingGet"
            },
            {
              "attr": "enableLoading",
              "valueType": "Boolean",
              "extraInfo": "*",
              "name": "enableLoading"
            },
            {
              "attr": "pureFormValues",
              "valueType": "Boolean",
              "description": "",
              "name": "pureFormValues"
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "name": "userData"
            },
            {
              "attr": "onDisplayLoaded",
              "valueType": "Function",
              "description": "",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache"
                ]
              },
              "name": "onDisplayLoaded"
            },
            {
              "attr": "shadowBorder",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                0,
                8
              ],
              "group": "外观",
              "extraInfo": "*",
              "name": "shadowBorder"
            },
            {
              "attr": "shadowColor",
              "valueType": "Color",
              "defaultValue": "rgba(55,125,255,0.50)",
              "extraInfo": "*",
              "name": "shadowColor"
            },
            {
              "attr": "shadowEnabled",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "shadowEnabled"
            },
            {
              "attr": "borderWidth",
              "valueType": "Number",
              "name": "borderWidth"
            },
            {
              "attr": "innerBackground",
              "valueType": "Color",
              "defaultValue": null,
              "description": "",
              "name": "innerBackground"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "连线",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "ObjectArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "ObjectArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form,type,inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ],
                "classify": "*"
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            }
          ],
          "snapshotURL": "symbols/develop/uiotos/arranged/controls/containers_icon/嵌套容器.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __graphView(data,gv,cache);}",
          "width": 200,
          "height": 120,
          "fitSize": true,
          "pixelPerfect": false,
          "comps": [
            {
              "type": "text",
              "text": {
                "func": "__ht__function(data, view) {\n// return data.ca('__loadingText')[!data.ca('__loadingStatus')]\n}",
                "value": "…"
              },
              "align": "center",
              "color": {
                "func": "attr@__loadingColor",
                "value": "rgb(150,150,150)"
              },
              "font": {
                "func": "attr@__loadingFont",
                "value": "12px arial, sans-serif"
              },
              "visible": {
                "func": "attr@__loadingVisible",
                "value": false
              },
              "layoutH": "center",
              "layoutV": "center",
              "displayName": "Text（Text1）",
              "rect": [
                74.69339,
                53.1422,
                50.61322,
                13.7156
              ]
            }
          ],
          "uuid": "B8B8D38B-A3C2-437F-912D-BC7D336DCD98"
        },
        "host": {
          "__i": 74139
        },
        "position": {
          "x": 57.56154,
          "y": 199.10708
        },
        "width": 456.78458,
        "height": 70
      },
      "s": {
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "label.opacity": 0,
        "2d.movable": false,
        "2d.selectable": false
      },
      "a": {
        "symbol": "symbols/develop/uiotos/arranged/controls/containers/嵌套容器.json",
        "display": "./按钮模版.json",
        "__loadingStatus": false,
        "isLoadingGet": false,
        "innerLayoutMode": "fullScreen",
        "innerBackground": "rgb(30,70,116)",
        "origin_width": 221.64199,
        "origin_height": 109.46738,
        "toolTipRaw": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "shadowEnabled": false
      }
    },
    {
      "c": "ht.Node",
      "i": 74141,
      "p": {
        "name": "gv",
        "displayName": "嵌套容器（gv5）",
        "toolTip": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "parent": {
          "__i": 74139
        },
        "tag": "gv5",
        "dataBindings": {
          "a": {
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "innerLayoutMode": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "按钮模版>0>btn2>a:ht.text": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "按钮模版>0>btn2>a:iconPath": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "按钮模版>0>btn2>a:onFormClick": {
              "id": "iotos.formReset",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Thu Jul 04 2024 21:25:46 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "display",
              "valueType": "URL",
              "group": "功能",
              "name": "display"
            },
            {
              "attr": "displayJson",
              "valueType": "Multiline",
              "description": "",
              "extraInfo": "*",
              "name": "displayJson"
            },
            {
              "attr": "innerLayoutMode",
              "valueType": "InnerLayoutMode",
              "defaultValue": "none",
              "description": "",
              "name": "innerLayoutMode"
            },
            {
              "attr": "onPostDeserialize",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "json",
                  "dm",
                  "gv",
                  "datas"
                ],
                "classify": "*"
              },
              "description": "",
              "name": "onPostDeserialize"
            },
            {
              "attr": "useOriginSize",
              "valueType": "Boolean",
              "defaultValue": false,
              "extraInfo": "★",
              "description": "",
              "name": "useOriginSize"
            },
            {
              "attr": "useInnerEventsAll",
              "valueType": "Boolean",
              "description": "",
              "extraInfo": "*",
              "name": "useInnerEventsAll"
            },
            {
              "attr": "isLoadingGet",
              "valueType": "Boolean",
              "description": "",
              "defaultValue": false,
              "extraInfo": "★",
              "name": "isLoadingGet"
            },
            {
              "attr": "enableLoading",
              "valueType": "Boolean",
              "extraInfo": "*",
              "name": "enableLoading"
            },
            {
              "attr": "pureFormValues",
              "valueType": "Boolean",
              "description": "",
              "name": "pureFormValues"
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "name": "userData"
            },
            {
              "attr": "onDisplayLoaded",
              "valueType": "Function",
              "description": "",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache"
                ]
              },
              "name": "onDisplayLoaded"
            },
            {
              "attr": "shadowBorder",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                0,
                8
              ],
              "group": "外观",
              "extraInfo": "*",
              "name": "shadowBorder"
            },
            {
              "attr": "shadowColor",
              "valueType": "Color",
              "defaultValue": "rgba(55,125,255,0.50)",
              "extraInfo": "*",
              "name": "shadowColor"
            },
            {
              "attr": "shadowEnabled",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "shadowEnabled"
            },
            {
              "attr": "borderWidth",
              "valueType": "Number",
              "name": "borderWidth"
            },
            {
              "attr": "innerBackground",
              "valueType": "Color",
              "defaultValue": null,
              "description": "",
              "name": "innerBackground"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "连线",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "ObjectArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "ObjectArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form,type,inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ],
                "classify": "*"
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "按钮模版>0>btn2>a:onFormClick",
              "name": ".点击事件",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value",
                  "extra"
                ]
              },
              "description": "当点击时对外触发。",
              "group": "按钮模版>0>btn2"
            },
            {
              "attr": "按钮模版>0>btn2>a:iconPath",
              "name": ".图标路径",
              "valueType": "Image",
              "defaultValue": "symbols/develop/uiotos/arranged/icons/设置/check-circle-165.json",
              "description": "图标路径。",
              "group": "按钮模版>0>btn2"
            },
            {
              "attr": "按钮模版>0>btn2>a:ht.text",
              "name": ".文字",
              "valueType": "Multiline",
              "defaultValue": "作业签退",
              "description": "文本。",
              "group": "按钮模版>0>btn2"
            }
          ],
          "snapshotURL": "symbols/develop/uiotos/arranged/controls/containers_icon/嵌套容器.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __graphView(data,gv,cache);}",
          "width": 200,
          "height": 120,
          "fitSize": true,
          "pixelPerfect": false,
          "comps": [
            {
              "type": "text",
              "text": {
                "func": "__ht__function(data, view) {\n// return data.ca('__loadingText')[!data.ca('__loadingStatus')]\n}",
                "value": "…"
              },
              "align": "center",
              "color": {
                "func": "attr@__loadingColor",
                "value": "rgb(150,150,150)"
              },
              "font": {
                "func": "attr@__loadingFont",
                "value": "12px arial, sans-serif"
              },
              "visible": {
                "func": "attr@__loadingVisible",
                "value": false
              },
              "layoutH": "center",
              "layoutV": "center",
              "displayName": "Text（Text1）",
              "rect": [
                74.69339,
                53.1422,
                50.61322,
                13.7156
              ]
            }
          ],
          "uuid": "B8B8D38B-A3C2-437F-912D-BC7D336DCD98"
        },
        "host": {
          "__i": 74139
        },
        "position": {
          "x": 544.34612,
          "y": 199.10708
        },
        "width": 456.78458,
        "height": 70
      },
      "s": {
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "label.opacity": 0,
        "attach.column.index": 1,
        "2d.movable": false,
        "2d.selectable": false
      },
      "a": {
        "symbol": "symbols/develop/uiotos/arranged/controls/containers/嵌套容器.json",
        "display": "./按钮模版.json",
        "__loadingStatus": false,
        "isLoadingGet": false,
        "innerLayoutMode": "fullScreen",
        "innerBackground": "rgb(30,70,116)",
        "origin_width": 221.64199,
        "origin_height": 109.46738,
        "toolTipRaw": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "按钮模版>0>btn2>a:ht.text": "工艺调试",
        "按钮模版>0>btn2>a:iconPath": "symbols/develop/uiotos/arranged/icons/设置/后期维护 维护 维护管理-85.json",
        "shadowEnabled": false,
        "innerBackgroundLocked": false
      }
    },
    {
      "c": "ht.Node",
      "i": 74142,
      "p": {
        "name": "gv",
        "displayName": "嵌套容器（gv6）",
        "toolTip": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "parent": {
          "__i": 74139
        },
        "tag": "gv6",
        "dataBindings": {
          "a": {
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "innerLayoutMode": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "按钮模版>0>btn2>a:iconPath": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "按钮模版>0>btn2>a:ht.text": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Thu Jul 04 2024 21:25:46 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "display",
              "valueType": "URL",
              "group": "功能",
              "name": "display"
            },
            {
              "attr": "displayJson",
              "valueType": "Multiline",
              "description": "",
              "extraInfo": "*",
              "name": "displayJson"
            },
            {
              "attr": "innerLayoutMode",
              "valueType": "InnerLayoutMode",
              "defaultValue": "none",
              "description": "",
              "name": "innerLayoutMode"
            },
            {
              "attr": "onPostDeserialize",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "json",
                  "dm",
                  "gv",
                  "datas"
                ],
                "classify": "*"
              },
              "description": "",
              "name": "onPostDeserialize"
            },
            {
              "attr": "useOriginSize",
              "valueType": "Boolean",
              "defaultValue": false,
              "extraInfo": "★",
              "description": "",
              "name": "useOriginSize"
            },
            {
              "attr": "useInnerEventsAll",
              "valueType": "Boolean",
              "description": "",
              "extraInfo": "*",
              "name": "useInnerEventsAll"
            },
            {
              "attr": "isLoadingGet",
              "valueType": "Boolean",
              "description": "",
              "defaultValue": false,
              "extraInfo": "★",
              "name": "isLoadingGet"
            },
            {
              "attr": "enableLoading",
              "valueType": "Boolean",
              "extraInfo": "*",
              "name": "enableLoading"
            },
            {
              "attr": "pureFormValues",
              "valueType": "Boolean",
              "description": "",
              "name": "pureFormValues"
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "name": "userData"
            },
            {
              "attr": "onDisplayLoaded",
              "valueType": "Function",
              "description": "",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache"
                ]
              },
              "name": "onDisplayLoaded"
            },
            {
              "attr": "shadowBorder",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                0,
                8
              ],
              "group": "外观",
              "extraInfo": "*",
              "name": "shadowBorder"
            },
            {
              "attr": "shadowColor",
              "valueType": "Color",
              "defaultValue": "rgba(55,125,255,0.50)",
              "extraInfo": "*",
              "name": "shadowColor"
            },
            {
              "attr": "shadowEnabled",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "shadowEnabled"
            },
            {
              "attr": "borderWidth",
              "valueType": "Number",
              "name": "borderWidth"
            },
            {
              "attr": "innerBackground",
              "valueType": "Color",
              "defaultValue": null,
              "description": "",
              "name": "innerBackground"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "连线",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "ObjectArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "ObjectArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form,type,inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ],
                "classify": "*"
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "按钮模版>0>btn2>a:iconPath",
              "name": ".图标路径",
              "valueType": "Image",
              "defaultValue": "symbols/develop/uiotos/arranged/icons/设置/check-circle-165.json",
              "description": "图标路径。",
              "group": "按钮模版>0>btn2"
            },
            {
              "attr": "按钮模版>0>btn2>a:ht.text",
              "name": ".文字",
              "valueType": "Multiline",
              "defaultValue": "作业签退",
              "description": "文本。",
              "group": "按钮模版>0>btn2"
            }
          ],
          "snapshotURL": "symbols/develop/uiotos/arranged/controls/containers_icon/嵌套容器.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __graphView(data,gv,cache);}",
          "width": 200,
          "height": 120,
          "fitSize": true,
          "pixelPerfect": false,
          "comps": [
            {
              "type": "text",
              "text": {
                "func": "__ht__function(data, view) {\n// return data.ca('__loadingText')[!data.ca('__loadingStatus')]\n}",
                "value": "…"
              },
              "align": "center",
              "color": {
                "func": "attr@__loadingColor",
                "value": "rgb(150,150,150)"
              },
              "font": {
                "func": "attr@__loadingFont",
                "value": "12px arial, sans-serif"
              },
              "visible": {
                "func": "attr@__loadingVisible",
                "value": false
              },
              "layoutH": "center",
              "layoutV": "center",
              "displayName": "Text（Text1）",
              "rect": [
                74.69339,
                53.1422,
                50.61322,
                13.7156
              ]
            }
          ],
          "uuid": "B8B8D38B-A3C2-437F-912D-BC7D336DCD98"
        },
        "host": {
          "__i": 74139
        },
        "position": {
          "x": 1031.1307,
          "y": 199.10708
        },
        "width": 456.78458,
        "height": 70
      },
      "s": {
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "label.opacity": 0,
        "attach.column.index": 2,
        "2d.movable": false,
        "2d.selectable": false
      },
      "a": {
        "symbol": "symbols/develop/uiotos/arranged/controls/containers/嵌套容器.json",
        "display": "./按钮模版.json",
        "__loadingStatus": false,
        "isLoadingGet": false,
        "innerLayoutMode": "fullScreen",
        "innerBackground": "rgb(30,70,116)",
        "origin_width": 221.64199,
        "origin_height": 109.46738,
        "toolTipRaw": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "按钮模版>0>btn2>a:ht.text": "SPC监控",
        "按钮模版>0>btn2>a:iconPath": "symbols/develop/uiotos/arranged/icons/图表/chart-bar-20 (2).json",
        "shadowEnabled": false,
        "innerBackgroundLocked": false
      }
    },
    {
      "c": "ht.Node",
      "i": 74143,
      "p": {
        "name": "gv",
        "displayName": "嵌套容器（gv7）",
        "toolTip": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "parent": {
          "__i": 74139
        },
        "tag": "gv7",
        "dataBindings": {
          "a": {
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "innerLayoutMode": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "按钮模版>0>btn2>a:ht.text": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "按钮模版>0>btn2>a:iconPath": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Thu Jul 04 2024 21:25:46 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "display",
              "valueType": "URL",
              "group": "功能",
              "name": "display"
            },
            {
              "attr": "displayJson",
              "valueType": "Multiline",
              "description": "",
              "extraInfo": "*",
              "name": "displayJson"
            },
            {
              "attr": "innerLayoutMode",
              "valueType": "InnerLayoutMode",
              "defaultValue": "none",
              "description": "",
              "name": "innerLayoutMode"
            },
            {
              "attr": "onPostDeserialize",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "json",
                  "dm",
                  "gv",
                  "datas"
                ],
                "classify": "*"
              },
              "description": "",
              "name": "onPostDeserialize"
            },
            {
              "attr": "useOriginSize",
              "valueType": "Boolean",
              "defaultValue": false,
              "extraInfo": "★",
              "description": "",
              "name": "useOriginSize"
            },
            {
              "attr": "useInnerEventsAll",
              "valueType": "Boolean",
              "description": "",
              "extraInfo": "*",
              "name": "useInnerEventsAll"
            },
            {
              "attr": "isLoadingGet",
              "valueType": "Boolean",
              "description": "",
              "defaultValue": false,
              "extraInfo": "★",
              "name": "isLoadingGet"
            },
            {
              "attr": "enableLoading",
              "valueType": "Boolean",
              "extraInfo": "*",
              "name": "enableLoading"
            },
            {
              "attr": "pureFormValues",
              "valueType": "Boolean",
              "description": "",
              "name": "pureFormValues"
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "name": "userData"
            },
            {
              "attr": "onDisplayLoaded",
              "valueType": "Function",
              "description": "",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache"
                ]
              },
              "name": "onDisplayLoaded"
            },
            {
              "attr": "shadowBorder",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                0,
                8
              ],
              "group": "外观",
              "extraInfo": "*",
              "name": "shadowBorder"
            },
            {
              "attr": "shadowColor",
              "valueType": "Color",
              "defaultValue": "rgba(55,125,255,0.50)",
              "extraInfo": "*",
              "name": "shadowColor"
            },
            {
              "attr": "shadowEnabled",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "shadowEnabled"
            },
            {
              "attr": "borderWidth",
              "valueType": "Number",
              "name": "borderWidth"
            },
            {
              "attr": "innerBackground",
              "valueType": "Color",
              "defaultValue": null,
              "description": "",
              "name": "innerBackground"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "连线",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "ObjectArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "ObjectArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form,type,inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ],
                "classify": "*"
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "按钮模版>0>btn2>a:iconPath",
              "name": ".图标路径",
              "valueType": "Image",
              "defaultValue": "symbols/develop/uiotos/arranged/icons/设置/check-circle-165.json",
              "description": "图标路径。",
              "group": "按钮模版>0>btn2"
            },
            {
              "attr": "按钮模版>0>btn2>a:ht.text",
              "name": ".文字",
              "valueType": "Multiline",
              "defaultValue": "作业签退",
              "description": "文本。",
              "group": "按钮模版>0>btn2"
            }
          ],
          "snapshotURL": "symbols/develop/uiotos/arranged/controls/containers_icon/嵌套容器.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __graphView(data,gv,cache);}",
          "width": 200,
          "height": 120,
          "fitSize": true,
          "pixelPerfect": false,
          "comps": [
            {
              "type": "text",
              "text": {
                "func": "__ht__function(data, view) {\n// return data.ca('__loadingText')[!data.ca('__loadingStatus')]\n}",
                "value": "…"
              },
              "align": "center",
              "color": {
                "func": "attr@__loadingColor",
                "value": "rgb(150,150,150)"
              },
              "font": {
                "func": "attr@__loadingFont",
                "value": "12px arial, sans-serif"
              },
              "visible": {
                "func": "attr@__loadingVisible",
                "value": false
              },
              "layoutH": "center",
              "layoutV": "center",
              "displayName": "Text（Text1）",
              "rect": [
                74.69339,
                53.1422,
                50.61322,
                13.7156
              ]
            }
          ],
          "uuid": "B8B8D38B-A3C2-437F-912D-BC7D336DCD98"
        },
        "host": {
          "__i": 74139
        },
        "position": {
          "x": 57.56154,
          "y": 299.10708
        },
        "width": 456.78458,
        "height": 70
      },
      "s": {
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "label.opacity": 0,
        "attach.row.index": 1,
        "2d.movable": false,
        "2d.selectable": false
      },
      "a": {
        "symbol": "symbols/develop/uiotos/arranged/controls/containers/嵌套容器.json",
        "display": "./按钮模版.json",
        "__loadingStatus": false,
        "isLoadingGet": false,
        "innerLayoutMode": "fullScreen",
        "innerBackground": "rgb(30,70,116)",
        "origin_width": 221.64199,
        "origin_height": 109.46738,
        "toolTipRaw": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "按钮模版>0>btn2>a:ht.text": "安灯告警",
        "按钮模版>0>btn2>a:iconPath": "symbols/develop/uiotos/arranged/icons/设置/early-warning-237.json",
        "shadowEnabled": false
      }
    },
    {
      "c": "ht.Node",
      "i": 74144,
      "p": {
        "name": "gv",
        "displayName": "嵌套容器（gv8）",
        "toolTip": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "parent": {
          "__i": 74139
        },
        "tag": "gv8",
        "dataBindings": {
          "a": {
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "innerLayoutMode": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "按钮模版>0>btn2>a:iconPath": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "按钮模版>0>btn2>a:ht.text": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Thu Jul 04 2024 21:25:46 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "display",
              "valueType": "URL",
              "group": "功能",
              "name": "display"
            },
            {
              "attr": "displayJson",
              "valueType": "Multiline",
              "description": "",
              "extraInfo": "*",
              "name": "displayJson"
            },
            {
              "attr": "innerLayoutMode",
              "valueType": "InnerLayoutMode",
              "defaultValue": "none",
              "description": "",
              "name": "innerLayoutMode"
            },
            {
              "attr": "onPostDeserialize",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "json",
                  "dm",
                  "gv",
                  "datas"
                ],
                "classify": "*"
              },
              "description": "",
              "name": "onPostDeserialize"
            },
            {
              "attr": "useOriginSize",
              "valueType": "Boolean",
              "defaultValue": false,
              "extraInfo": "★",
              "description": "",
              "name": "useOriginSize"
            },
            {
              "attr": "useInnerEventsAll",
              "valueType": "Boolean",
              "description": "",
              "extraInfo": "*",
              "name": "useInnerEventsAll"
            },
            {
              "attr": "isLoadingGet",
              "valueType": "Boolean",
              "description": "",
              "defaultValue": false,
              "extraInfo": "★",
              "name": "isLoadingGet"
            },
            {
              "attr": "enableLoading",
              "valueType": "Boolean",
              "extraInfo": "*",
              "name": "enableLoading"
            },
            {
              "attr": "pureFormValues",
              "valueType": "Boolean",
              "description": "",
              "name": "pureFormValues"
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "name": "userData"
            },
            {
              "attr": "onDisplayLoaded",
              "valueType": "Function",
              "description": "",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache"
                ]
              },
              "name": "onDisplayLoaded"
            },
            {
              "attr": "shadowBorder",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                0,
                8
              ],
              "group": "外观",
              "extraInfo": "*",
              "name": "shadowBorder"
            },
            {
              "attr": "shadowColor",
              "valueType": "Color",
              "defaultValue": "rgba(55,125,255,0.50)",
              "extraInfo": "*",
              "name": "shadowColor"
            },
            {
              "attr": "shadowEnabled",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "shadowEnabled"
            },
            {
              "attr": "borderWidth",
              "valueType": "Number",
              "name": "borderWidth"
            },
            {
              "attr": "innerBackground",
              "valueType": "Color",
              "defaultValue": null,
              "description": "",
              "name": "innerBackground"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "连线",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "ObjectArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "ObjectArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form,type,inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ],
                "classify": "*"
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "按钮模版>0>btn2>a:iconPath",
              "name": ".图标路径",
              "valueType": "Image",
              "defaultValue": "symbols/develop/uiotos/arranged/icons/设置/check-circle-165.json",
              "description": "图标路径。",
              "group": "按钮模版>0>btn2"
            },
            {
              "attr": "按钮模版>0>btn2>a:ht.text",
              "name": ".文字",
              "valueType": "Multiline",
              "defaultValue": "作业签退",
              "description": "文本。",
              "group": "按钮模版>0>btn2"
            }
          ],
          "snapshotURL": "symbols/develop/uiotos/arranged/controls/containers_icon/嵌套容器.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __graphView(data,gv,cache);}",
          "width": 200,
          "height": 120,
          "fitSize": true,
          "pixelPerfect": false,
          "comps": [
            {
              "type": "text",
              "text": {
                "func": "__ht__function(data, view) {\n// return data.ca('__loadingText')[!data.ca('__loadingStatus')]\n}",
                "value": "…"
              },
              "align": "center",
              "color": {
                "func": "attr@__loadingColor",
                "value": "rgb(150,150,150)"
              },
              "font": {
                "func": "attr@__loadingFont",
                "value": "12px arial, sans-serif"
              },
              "visible": {
                "func": "attr@__loadingVisible",
                "value": false
              },
              "layoutH": "center",
              "layoutV": "center",
              "displayName": "Text（Text1）",
              "rect": [
                74.69339,
                53.1422,
                50.61322,
                13.7156
              ]
            }
          ],
          "uuid": "B8B8D38B-A3C2-437F-912D-BC7D336DCD98"
        },
        "host": {
          "__i": 74139
        },
        "position": {
          "x": 544.34612,
          "y": 299.10708
        },
        "width": 456.78458,
        "height": 70
      },
      "s": {
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "label.opacity": 0,
        "attach.row.index": 1,
        "attach.column.index": 1,
        "2d.movable": false,
        "2d.selectable": false
      },
      "a": {
        "symbol": "symbols/develop/uiotos/arranged/controls/containers/嵌套容器.json",
        "display": "./按钮模版.json",
        "__loadingStatus": false,
        "isLoadingGet": false,
        "innerLayoutMode": "fullScreen",
        "innerBackground": "rgb(30,70,116)",
        "origin_width": 221.64199,
        "origin_height": 109.46738,
        "toolTipRaw": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "按钮模版>0>btn2>a:ht.text": "紧急启停",
        "按钮模版>0>btn2>a:iconPath": "symbols/develop/uiotos/arranged/icons/更多图标/exclamation circle-f-95.json",
        "shadowEnabled": false
      }
    },
    {
      "c": "ht.Node",
      "i": 74145,
      "p": {
        "name": "gv",
        "displayName": "嵌套容器（gv9）",
        "toolTip": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "parent": {
          "__i": 74139
        },
        "tag": "gv9",
        "dataBindings": {
          "a": {
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "innerLayoutMode": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "按钮模版>0>btn2>a:iconPath": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "按钮模版>0>btn2>a:ht.text": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Thu Jul 04 2024 21:25:46 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "display",
              "valueType": "URL",
              "group": "功能",
              "name": "display"
            },
            {
              "attr": "displayJson",
              "valueType": "Multiline",
              "description": "",
              "extraInfo": "*",
              "name": "displayJson"
            },
            {
              "attr": "innerLayoutMode",
              "valueType": "InnerLayoutMode",
              "defaultValue": "none",
              "description": "",
              "name": "innerLayoutMode"
            },
            {
              "attr": "onPostDeserialize",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "json",
                  "dm",
                  "gv",
                  "datas"
                ],
                "classify": "*"
              },
              "description": "",
              "name": "onPostDeserialize"
            },
            {
              "attr": "useOriginSize",
              "valueType": "Boolean",
              "defaultValue": false,
              "extraInfo": "★",
              "description": "",
              "name": "useOriginSize"
            },
            {
              "attr": "useInnerEventsAll",
              "valueType": "Boolean",
              "description": "",
              "extraInfo": "*",
              "name": "useInnerEventsAll"
            },
            {
              "attr": "isLoadingGet",
              "valueType": "Boolean",
              "description": "",
              "defaultValue": false,
              "extraInfo": "★",
              "name": "isLoadingGet"
            },
            {
              "attr": "enableLoading",
              "valueType": "Boolean",
              "extraInfo": "*",
              "name": "enableLoading"
            },
            {
              "attr": "pureFormValues",
              "valueType": "Boolean",
              "description": "",
              "name": "pureFormValues"
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "name": "userData"
            },
            {
              "attr": "onDisplayLoaded",
              "valueType": "Function",
              "description": "",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache"
                ]
              },
              "name": "onDisplayLoaded"
            },
            {
              "attr": "shadowBorder",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                0,
                8
              ],
              "group": "外观",
              "extraInfo": "*",
              "name": "shadowBorder"
            },
            {
              "attr": "shadowColor",
              "valueType": "Color",
              "defaultValue": "rgba(55,125,255,0.50)",
              "extraInfo": "*",
              "name": "shadowColor"
            },
            {
              "attr": "shadowEnabled",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "shadowEnabled"
            },
            {
              "attr": "borderWidth",
              "valueType": "Number",
              "name": "borderWidth"
            },
            {
              "attr": "innerBackground",
              "valueType": "Color",
              "defaultValue": null,
              "description": "",
              "name": "innerBackground"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "连线",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "ObjectArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "ObjectArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form,type,inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ],
                "classify": "*"
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "按钮模版>0>btn2>a:iconPath",
              "name": ".图标路径",
              "valueType": "Image",
              "defaultValue": "symbols/develop/uiotos/arranged/icons/设置/check-circle-165.json",
              "description": "图标路径。",
              "group": "按钮模版>0>btn2"
            },
            {
              "attr": "按钮模版>0>btn2>a:ht.text",
              "name": ".文字",
              "valueType": "Multiline",
              "defaultValue": "作业签退",
              "description": "文本。",
              "group": "按钮模版>0>btn2"
            }
          ],
          "snapshotURL": "symbols/develop/uiotos/arranged/controls/containers_icon/嵌套容器.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __graphView(data,gv,cache);}",
          "width": 200,
          "height": 120,
          "fitSize": true,
          "pixelPerfect": false,
          "comps": [
            {
              "type": "text",
              "text": {
                "func": "__ht__function(data, view) {\n// return data.ca('__loadingText')[!data.ca('__loadingStatus')]\n}",
                "value": "…"
              },
              "align": "center",
              "color": {
                "func": "attr@__loadingColor",
                "value": "rgb(150,150,150)"
              },
              "font": {
                "func": "attr@__loadingFont",
                "value": "12px arial, sans-serif"
              },
              "visible": {
                "func": "attr@__loadingVisible",
                "value": false
              },
              "layoutH": "center",
              "layoutV": "center",
              "displayName": "Text（Text1）",
              "rect": [
                74.69339,
                53.1422,
                50.61322,
                13.7156
              ]
            }
          ],
          "uuid": "B8B8D38B-A3C2-437F-912D-BC7D336DCD98"
        },
        "host": {
          "__i": 74139
        },
        "position": {
          "x": 1031.1307,
          "y": 299.10708
        },
        "width": 456.78458,
        "height": 70
      },
      "s": {
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "label.opacity": 0,
        "attach.row.index": 1,
        "attach.column.index": 2,
        "2d.movable": false,
        "2d.selectable": false
      },
      "a": {
        "symbol": "symbols/develop/uiotos/arranged/controls/containers/嵌套容器.json",
        "display": "./按钮模版.json",
        "__loadingStatus": false,
        "isLoadingGet": false,
        "innerLayoutMode": "fullScreen",
        "innerBackground": "rgb(30,70,116)",
        "origin_width": 221.64199,
        "origin_height": 109.46738,
        "toolTipRaw": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "按钮模版>0>btn2>a:ht.text": "工单监测",
        "按钮模版>0>btn2>a:iconPath": "symbols/develop/uiotos/arranged/icons/文件/copy-139.json",
        "shadowEnabled": false
      }
    },
    {
      "c": "ht.Node",
      "i": 74146,
      "p": {
        "name": "gv",
        "displayName": "嵌套容器（gv10）",
        "toolTip": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "parent": {
          "__i": 74139
        },
        "tag": "gv10",
        "dataBindings": {
          "a": {
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "innerLayoutMode": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "按钮模版>0>btn2>a:iconPath": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "按钮模版>0>btn2>a:ht.text": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Thu Jul 04 2024 21:25:46 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "display",
              "valueType": "URL",
              "group": "功能",
              "name": "display"
            },
            {
              "attr": "displayJson",
              "valueType": "Multiline",
              "description": "",
              "extraInfo": "*",
              "name": "displayJson"
            },
            {
              "attr": "innerLayoutMode",
              "valueType": "InnerLayoutMode",
              "defaultValue": "none",
              "description": "",
              "name": "innerLayoutMode"
            },
            {
              "attr": "onPostDeserialize",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "json",
                  "dm",
                  "gv",
                  "datas"
                ],
                "classify": "*"
              },
              "description": "",
              "name": "onPostDeserialize"
            },
            {
              "attr": "useOriginSize",
              "valueType": "Boolean",
              "defaultValue": false,
              "extraInfo": "★",
              "description": "",
              "name": "useOriginSize"
            },
            {
              "attr": "useInnerEventsAll",
              "valueType": "Boolean",
              "description": "",
              "extraInfo": "*",
              "name": "useInnerEventsAll"
            },
            {
              "attr": "isLoadingGet",
              "valueType": "Boolean",
              "description": "",
              "defaultValue": false,
              "extraInfo": "★",
              "name": "isLoadingGet"
            },
            {
              "attr": "enableLoading",
              "valueType": "Boolean",
              "extraInfo": "*",
              "name": "enableLoading"
            },
            {
              "attr": "pureFormValues",
              "valueType": "Boolean",
              "description": "",
              "name": "pureFormValues"
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "name": "userData"
            },
            {
              "attr": "onDisplayLoaded",
              "valueType": "Function",
              "description": "",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache"
                ]
              },
              "name": "onDisplayLoaded"
            },
            {
              "attr": "shadowBorder",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                0,
                8
              ],
              "group": "外观",
              "extraInfo": "*",
              "name": "shadowBorder"
            },
            {
              "attr": "shadowColor",
              "valueType": "Color",
              "defaultValue": "rgba(55,125,255,0.50)",
              "extraInfo": "*",
              "name": "shadowColor"
            },
            {
              "attr": "shadowEnabled",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "shadowEnabled"
            },
            {
              "attr": "borderWidth",
              "valueType": "Number",
              "name": "borderWidth"
            },
            {
              "attr": "innerBackground",
              "valueType": "Color",
              "defaultValue": null,
              "description": "",
              "name": "innerBackground"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "连线",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "ObjectArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "ObjectArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form,type,inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ],
                "classify": "*"
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "按钮模版>0>btn2>a:iconPath",
              "name": ".图标路径",
              "valueType": "Image",
              "defaultValue": "symbols/develop/uiotos/arranged/icons/设置/check-circle-165.json",
              "description": "图标路径。",
              "group": "按钮模版>0>btn2"
            },
            {
              "attr": "按钮模版>0>btn2>a:ht.text",
              "name": ".文字",
              "valueType": "Multiline",
              "defaultValue": "作业签退",
              "description": "文本。",
              "group": "按钮模版>0>btn2"
            }
          ],
          "snapshotURL": "symbols/develop/uiotos/arranged/controls/containers_icon/嵌套容器.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __graphView(data,gv,cache);}",
          "width": 200,
          "height": 120,
          "fitSize": true,
          "pixelPerfect": false,
          "comps": [
            {
              "type": "text",
              "text": {
                "func": "__ht__function(data, view) {\n// return data.ca('__loadingText')[!data.ca('__loadingStatus')]\n}",
                "value": "…"
              },
              "align": "center",
              "color": {
                "func": "attr@__loadingColor",
                "value": "rgb(150,150,150)"
              },
              "font": {
                "func": "attr@__loadingFont",
                "value": "12px arial, sans-serif"
              },
              "visible": {
                "func": "attr@__loadingVisible",
                "value": false
              },
              "layoutH": "center",
              "layoutV": "center",
              "displayName": "Text（Text1）",
              "rect": [
                74.69339,
                53.1422,
                50.61322,
                13.7156
              ]
            }
          ],
          "uuid": "B8B8D38B-A3C2-437F-912D-BC7D336DCD98"
        },
        "host": {
          "__i": 74139
        },
        "position": {
          "x": 57.56154,
          "y": 399.10708
        },
        "width": 456.78458,
        "height": 70
      },
      "s": {
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "label.opacity": 0,
        "attach.row.index": 2,
        "2d.movable": false,
        "2d.selectable": false
      },
      "a": {
        "symbol": "symbols/develop/uiotos/arranged/controls/containers/嵌套容器.json",
        "display": "./按钮模版.json",
        "__loadingStatus": false,
        "isLoadingGet": false,
        "innerLayoutMode": "fullScreen",
        "innerBackground": "rgb(30,70,116)",
        "origin_width": 221.64199,
        "origin_height": 109.46738,
        "toolTipRaw": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "按钮模版>0>btn2>a:ht.text": "设备监测",
        "按钮模版>0>btn2>a:iconPath": "symbols/develop/uiotos/arranged/icons/文件/copy-fill-73.json",
        "shadowEnabled": false
      }
    },
    {
      "c": "ht.Node",
      "i": 74147,
      "p": {
        "name": "gv",
        "displayName": "嵌套容器（gv11）",
        "toolTip": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "parent": {
          "__i": 74139
        },
        "tag": "gv11",
        "dataBindings": {
          "a": {
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "innerLayoutMode": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "按钮模版>0>btn2>a:iconPath": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "按钮模版>0>btn2>a:ht.text": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Thu Jul 04 2024 21:25:46 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "display",
              "valueType": "URL",
              "group": "功能",
              "name": "display"
            },
            {
              "attr": "displayJson",
              "valueType": "Multiline",
              "description": "",
              "extraInfo": "*",
              "name": "displayJson"
            },
            {
              "attr": "innerLayoutMode",
              "valueType": "InnerLayoutMode",
              "defaultValue": "none",
              "description": "",
              "name": "innerLayoutMode"
            },
            {
              "attr": "onPostDeserialize",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "json",
                  "dm",
                  "gv",
                  "datas"
                ],
                "classify": "*"
              },
              "description": "",
              "name": "onPostDeserialize"
            },
            {
              "attr": "useOriginSize",
              "valueType": "Boolean",
              "defaultValue": false,
              "extraInfo": "★",
              "description": "",
              "name": "useOriginSize"
            },
            {
              "attr": "useInnerEventsAll",
              "valueType": "Boolean",
              "description": "",
              "extraInfo": "*",
              "name": "useInnerEventsAll"
            },
            {
              "attr": "isLoadingGet",
              "valueType": "Boolean",
              "description": "",
              "defaultValue": false,
              "extraInfo": "★",
              "name": "isLoadingGet"
            },
            {
              "attr": "enableLoading",
              "valueType": "Boolean",
              "extraInfo": "*",
              "name": "enableLoading"
            },
            {
              "attr": "pureFormValues",
              "valueType": "Boolean",
              "description": "",
              "name": "pureFormValues"
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "name": "userData"
            },
            {
              "attr": "onDisplayLoaded",
              "valueType": "Function",
              "description": "",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache"
                ]
              },
              "name": "onDisplayLoaded"
            },
            {
              "attr": "shadowBorder",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                0,
                8
              ],
              "group": "外观",
              "extraInfo": "*",
              "name": "shadowBorder"
            },
            {
              "attr": "shadowColor",
              "valueType": "Color",
              "defaultValue": "rgba(55,125,255,0.50)",
              "extraInfo": "*",
              "name": "shadowColor"
            },
            {
              "attr": "shadowEnabled",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "shadowEnabled"
            },
            {
              "attr": "borderWidth",
              "valueType": "Number",
              "name": "borderWidth"
            },
            {
              "attr": "innerBackground",
              "valueType": "Color",
              "defaultValue": null,
              "description": "",
              "name": "innerBackground"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "连线",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "ObjectArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "ObjectArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form,type,inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ],
                "classify": "*"
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "按钮模版>0>btn2>a:iconPath",
              "name": ".图标路径",
              "valueType": "Image",
              "defaultValue": "symbols/develop/uiotos/arranged/icons/设置/check-circle-165.json",
              "description": "图标路径。",
              "group": "按钮模版>0>btn2"
            },
            {
              "attr": "按钮模版>0>btn2>a:ht.text",
              "name": ".文字",
              "valueType": "Multiline",
              "defaultValue": "作业签退",
              "description": "文本。",
              "group": "按钮模版>0>btn2"
            }
          ],
          "snapshotURL": "symbols/develop/uiotos/arranged/controls/containers_icon/嵌套容器.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __graphView(data,gv,cache);}",
          "width": 200,
          "height": 120,
          "fitSize": true,
          "pixelPerfect": false,
          "comps": [
            {
              "type": "text",
              "text": {
                "func": "__ht__function(data, view) {\n// return data.ca('__loadingText')[!data.ca('__loadingStatus')]\n}",
                "value": "…"
              },
              "align": "center",
              "color": {
                "func": "attr@__loadingColor",
                "value": "rgb(150,150,150)"
              },
              "font": {
                "func": "attr@__loadingFont",
                "value": "12px arial, sans-serif"
              },
              "visible": {
                "func": "attr@__loadingVisible",
                "value": false
              },
              "layoutH": "center",
              "layoutV": "center",
              "displayName": "Text（Text1）",
              "rect": [
                74.69339,
                53.1422,
                50.61322,
                13.7156
              ]
            }
          ],
          "uuid": "B8B8D38B-A3C2-437F-912D-BC7D336DCD98"
        },
        "host": {
          "__i": 74139
        },
        "position": {
          "x": 544.34612,
          "y": 399.10708
        },
        "width": 456.78458,
        "height": 70
      },
      "s": {
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "label.opacity": 0,
        "attach.row.index": 2,
        "attach.column.index": 1,
        "2d.movable": false,
        "2d.selectable": false
      },
      "a": {
        "symbol": "symbols/develop/uiotos/arranged/controls/containers/嵌套容器.json",
        "display": "./按钮模版.json",
        "__loadingStatus": false,
        "isLoadingGet": false,
        "innerLayoutMode": "fullScreen",
        "innerBackground": "rgb(30,70,116)",
        "origin_width": 221.64199,
        "origin_height": 109.46738,
        "toolTipRaw": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "按钮模版>0>btn2>a:ht.text": "数据看板",
        "按钮模版>0>btn2>a:iconPath": "symbols/develop/uiotos/arranged/icons/图表/chart-area-18.json",
        "shadowEnabled": false
      }
    },
    {
      "c": "ht.Node",
      "i": 74148,
      "p": {
        "name": "gv",
        "displayName": "嵌套容器（gv12）",
        "toolTip": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "parent": {
          "__i": 74139
        },
        "tag": "gv12",
        "dataBindings": {
          "a": {
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "innerLayoutMode": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "按钮模版>0>btn2>a:iconPath": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "按钮模版>0>btn2>a:ht.text": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Thu Jul 04 2024 21:25:46 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "display",
              "valueType": "URL",
              "group": "功能",
              "name": "display"
            },
            {
              "attr": "displayJson",
              "valueType": "Multiline",
              "description": "",
              "extraInfo": "*",
              "name": "displayJson"
            },
            {
              "attr": "innerLayoutMode",
              "valueType": "InnerLayoutMode",
              "defaultValue": "none",
              "description": "",
              "name": "innerLayoutMode"
            },
            {
              "attr": "onPostDeserialize",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "json",
                  "dm",
                  "gv",
                  "datas"
                ],
                "classify": "*"
              },
              "description": "",
              "name": "onPostDeserialize"
            },
            {
              "attr": "useOriginSize",
              "valueType": "Boolean",
              "defaultValue": false,
              "extraInfo": "★",
              "description": "",
              "name": "useOriginSize"
            },
            {
              "attr": "useInnerEventsAll",
              "valueType": "Boolean",
              "description": "",
              "extraInfo": "*",
              "name": "useInnerEventsAll"
            },
            {
              "attr": "isLoadingGet",
              "valueType": "Boolean",
              "description": "",
              "defaultValue": false,
              "extraInfo": "★",
              "name": "isLoadingGet"
            },
            {
              "attr": "enableLoading",
              "valueType": "Boolean",
              "extraInfo": "*",
              "name": "enableLoading"
            },
            {
              "attr": "pureFormValues",
              "valueType": "Boolean",
              "description": "",
              "name": "pureFormValues"
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "name": "userData"
            },
            {
              "attr": "onDisplayLoaded",
              "valueType": "Function",
              "description": "",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache"
                ]
              },
              "name": "onDisplayLoaded"
            },
            {
              "attr": "shadowBorder",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                0,
                8
              ],
              "group": "外观",
              "extraInfo": "*",
              "name": "shadowBorder"
            },
            {
              "attr": "shadowColor",
              "valueType": "Color",
              "defaultValue": "rgba(55,125,255,0.50)",
              "extraInfo": "*",
              "name": "shadowColor"
            },
            {
              "attr": "shadowEnabled",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "shadowEnabled"
            },
            {
              "attr": "borderWidth",
              "valueType": "Number",
              "name": "borderWidth"
            },
            {
              "attr": "innerBackground",
              "valueType": "Color",
              "defaultValue": null,
              "description": "",
              "name": "innerBackground"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "连线",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "ObjectArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "ObjectArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form,type,inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ],
                "classify": "*"
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "按钮模版>0>btn2>a:iconPath",
              "name": ".图标路径",
              "valueType": "Image",
              "defaultValue": "symbols/develop/uiotos/arranged/icons/设置/check-circle-165.json",
              "description": "图标路径。",
              "group": "按钮模版>0>btn2"
            },
            {
              "attr": "按钮模版>0>btn2>a:ht.text",
              "name": ".文字",
              "valueType": "Multiline",
              "defaultValue": "作业签退",
              "description": "文本。",
              "group": "按钮模版>0>btn2"
            }
          ],
          "snapshotURL": "symbols/develop/uiotos/arranged/controls/containers_icon/嵌套容器.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __graphView(data,gv,cache);}",
          "width": 200,
          "height": 120,
          "fitSize": true,
          "pixelPerfect": false,
          "comps": [
            {
              "type": "text",
              "text": {
                "func": "__ht__function(data, view) {\n// return data.ca('__loadingText')[!data.ca('__loadingStatus')]\n}",
                "value": "…"
              },
              "align": "center",
              "color": {
                "func": "attr@__loadingColor",
                "value": "rgb(150,150,150)"
              },
              "font": {
                "func": "attr@__loadingFont",
                "value": "12px arial, sans-serif"
              },
              "visible": {
                "func": "attr@__loadingVisible",
                "value": false
              },
              "layoutH": "center",
              "layoutV": "center",
              "displayName": "Text（Text1）",
              "rect": [
                74.69339,
                53.1422,
                50.61322,
                13.7156
              ]
            }
          ],
          "uuid": "B8B8D38B-A3C2-437F-912D-BC7D336DCD98"
        },
        "host": {
          "__i": 74139
        },
        "position": {
          "x": 1031.1307,
          "y": 399.10708
        },
        "width": 456.78458,
        "height": 70
      },
      "s": {
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "label.opacity": 0,
        "attach.row.index": 2,
        "attach.column.index": 2,
        "2d.movable": false,
        "2d.selectable": false
      },
      "a": {
        "symbol": "symbols/develop/uiotos/arranged/controls/containers/嵌套容器.json",
        "display": "./按钮模版.json",
        "__loadingStatus": false,
        "isLoadingGet": false,
        "innerLayoutMode": "fullScreen",
        "innerBackground": "rgb(30,70,116)",
        "origin_width": 221.64199,
        "origin_height": 109.46738,
        "toolTipRaw": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "按钮模版>0>btn2>a:ht.text": "操作指导",
        "按钮模版>0>btn2>a:iconPath": "symbols/develop/uiotos/arranged/icons/更多图标/account-152.json",
        "shadowEnabled": false
      }
    },
    {
      "c": "ht.Node",
      "i": 74149,
      "p": {
        "name": "gv",
        "displayName": "嵌套容器（gv13）",
        "toolTip": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "parent": {
          "__i": 74139
        },
        "tag": "gv13",
        "dataBindings": {
          "a": {
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "innerLayoutMode": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "按钮模版>0>btn2>a:iconPath": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "按钮模版>0>btn2>a:ht.text": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Thu Jul 04 2024 21:25:46 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "display",
              "valueType": "URL",
              "group": "功能",
              "name": "display"
            },
            {
              "attr": "displayJson",
              "valueType": "Multiline",
              "description": "",
              "extraInfo": "*",
              "name": "displayJson"
            },
            {
              "attr": "innerLayoutMode",
              "valueType": "InnerLayoutMode",
              "defaultValue": "none",
              "description": "",
              "name": "innerLayoutMode"
            },
            {
              "attr": "onPostDeserialize",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "json",
                  "dm",
                  "gv",
                  "datas"
                ],
                "classify": "*"
              },
              "description": "",
              "name": "onPostDeserialize"
            },
            {
              "attr": "useOriginSize",
              "valueType": "Boolean",
              "defaultValue": false,
              "extraInfo": "★",
              "description": "",
              "name": "useOriginSize"
            },
            {
              "attr": "useInnerEventsAll",
              "valueType": "Boolean",
              "description": "",
              "extraInfo": "*",
              "name": "useInnerEventsAll"
            },
            {
              "attr": "isLoadingGet",
              "valueType": "Boolean",
              "description": "",
              "defaultValue": false,
              "extraInfo": "★",
              "name": "isLoadingGet"
            },
            {
              "attr": "enableLoading",
              "valueType": "Boolean",
              "extraInfo": "*",
              "name": "enableLoading"
            },
            {
              "attr": "pureFormValues",
              "valueType": "Boolean",
              "description": "",
              "name": "pureFormValues"
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "name": "userData"
            },
            {
              "attr": "onDisplayLoaded",
              "valueType": "Function",
              "description": "",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache"
                ]
              },
              "name": "onDisplayLoaded"
            },
            {
              "attr": "shadowBorder",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                0,
                8
              ],
              "group": "外观",
              "extraInfo": "*",
              "name": "shadowBorder"
            },
            {
              "attr": "shadowColor",
              "valueType": "Color",
              "defaultValue": "rgba(55,125,255,0.50)",
              "extraInfo": "*",
              "name": "shadowColor"
            },
            {
              "attr": "shadowEnabled",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "shadowEnabled"
            },
            {
              "attr": "borderWidth",
              "valueType": "Number",
              "name": "borderWidth"
            },
            {
              "attr": "innerBackground",
              "valueType": "Color",
              "defaultValue": null,
              "description": "",
              "name": "innerBackground"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "连线",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "ObjectArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "ObjectArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form,type,inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ],
                "classify": "*"
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "按钮模版>0>btn2>a:iconPath",
              "name": ".图标路径",
              "valueType": "Image",
              "defaultValue": "symbols/develop/uiotos/arranged/icons/设置/check-circle-165.json",
              "description": "图标路径。",
              "group": "按钮模版>0>btn2"
            },
            {
              "attr": "按钮模版>0>btn2>a:ht.text",
              "name": ".文字",
              "valueType": "Multiline",
              "defaultValue": "作业签退",
              "description": "文本。",
              "group": "按钮模版>0>btn2"
            }
          ],
          "snapshotURL": "symbols/develop/uiotos/arranged/controls/containers_icon/嵌套容器.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __graphView(data,gv,cache);}",
          "width": 200,
          "height": 120,
          "fitSize": true,
          "pixelPerfect": false,
          "comps": [
            {
              "type": "text",
              "text": {
                "func": "__ht__function(data, view) {\n// return data.ca('__loadingText')[!data.ca('__loadingStatus')]\n}",
                "value": "…"
              },
              "align": "center",
              "color": {
                "func": "attr@__loadingColor",
                "value": "rgb(150,150,150)"
              },
              "font": {
                "func": "attr@__loadingFont",
                "value": "12px arial, sans-serif"
              },
              "visible": {
                "func": "attr@__loadingVisible",
                "value": false
              },
              "layoutH": "center",
              "layoutV": "center",
              "displayName": "Text（Text1）",
              "rect": [
                74.69339,
                53.1422,
                50.61322,
                13.7156
              ]
            }
          ],
          "uuid": "B8B8D38B-A3C2-437F-912D-BC7D336DCD98"
        },
        "host": {
          "__i": 74139
        },
        "position": {
          "x": 57.56154,
          "y": 499.10708
        },
        "width": 456.78458,
        "height": 70
      },
      "s": {
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "label.opacity": 0,
        "attach.row.index": 3,
        "2d.movable": false,
        "2d.selectable": false
      },
      "a": {
        "symbol": "symbols/develop/uiotos/arranged/controls/containers/嵌套容器.json",
        "display": "./按钮模版.json",
        "__loadingStatus": false,
        "isLoadingGet": false,
        "innerLayoutMode": "fullScreen",
        "innerBackground": "rgb(30,70,116)",
        "origin_width": 221.64199,
        "origin_height": 109.46738,
        "toolTipRaw": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "按钮模版>0>btn2>a:ht.text": "操作日志",
        "按钮模版>0>btn2>a:iconPath": "symbols/develop/uiotos/arranged/icons/文件/签约 确认签约 电子签约-86.json",
        "shadowEnabled": false
      }
    },
    {
      "c": "ht.Node",
      "i": 74150,
      "p": {
        "name": "gv",
        "displayName": "嵌套容器（gv14）",
        "toolTip": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "parent": {
          "__i": 74139
        },
        "tag": "gv14",
        "dataBindings": {
          "a": {
            "display": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "innerLayoutMode": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "按钮模版>0>btn2>a:iconPath": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "按钮模版>0>btn2>a:ht.text": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "__ht__function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        console.error(err);\r\n        return rawData;\r\n    }\r\n}",
              "alias": ""
            },
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Thu Jul 04 2024 21:25:46 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "display",
              "valueType": "URL",
              "group": "功能",
              "name": "display"
            },
            {
              "attr": "displayJson",
              "valueType": "Multiline",
              "description": "",
              "extraInfo": "*",
              "name": "displayJson"
            },
            {
              "attr": "innerLayoutMode",
              "valueType": "InnerLayoutMode",
              "defaultValue": "none",
              "description": "",
              "name": "innerLayoutMode"
            },
            {
              "attr": "onPostDeserialize",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "json",
                  "dm",
                  "gv",
                  "datas"
                ],
                "classify": "*"
              },
              "description": "",
              "name": "onPostDeserialize"
            },
            {
              "attr": "useOriginSize",
              "valueType": "Boolean",
              "defaultValue": false,
              "extraInfo": "★",
              "description": "",
              "name": "useOriginSize"
            },
            {
              "attr": "useInnerEventsAll",
              "valueType": "Boolean",
              "description": "",
              "extraInfo": "*",
              "name": "useInnerEventsAll"
            },
            {
              "attr": "isLoadingGet",
              "valueType": "Boolean",
              "description": "",
              "defaultValue": false,
              "extraInfo": "★",
              "name": "isLoadingGet"
            },
            {
              "attr": "enableLoading",
              "valueType": "Boolean",
              "extraInfo": "*",
              "name": "enableLoading"
            },
            {
              "attr": "pureFormValues",
              "valueType": "Boolean",
              "description": "",
              "name": "pureFormValues"
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "name": "userData"
            },
            {
              "attr": "onDisplayLoaded",
              "valueType": "Function",
              "description": "",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache"
                ]
              },
              "name": "onDisplayLoaded"
            },
            {
              "attr": "shadowBorder",
              "valueType": "NumberArray",
              "defaultValue": [
                0,
                0,
                8
              ],
              "group": "外观",
              "extraInfo": "*",
              "name": "shadowBorder"
            },
            {
              "attr": "shadowColor",
              "valueType": "Color",
              "defaultValue": "rgba(55,125,255,0.50)",
              "extraInfo": "*",
              "name": "shadowColor"
            },
            {
              "attr": "shadowEnabled",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "shadowEnabled"
            },
            {
              "attr": "borderWidth",
              "valueType": "Number",
              "name": "borderWidth"
            },
            {
              "attr": "innerBackground",
              "valueType": "Color",
              "defaultValue": null,
              "description": "",
              "name": "innerBackground"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "StringArray",
              "group": "连线",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "ObjectArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "StringArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "ObjectArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form,type,inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ],
                "classify": "*"
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "按钮模版>0>btn2>a:iconPath",
              "name": ".图标路径",
              "valueType": "Image",
              "defaultValue": "symbols/develop/uiotos/arranged/icons/设置/check-circle-165.json",
              "description": "图标路径。",
              "group": "按钮模版>0>btn2"
            },
            {
              "attr": "按钮模版>0>btn2>a:ht.text",
              "name": ".文字",
              "valueType": "Multiline",
              "defaultValue": "作业签退",
              "description": "文本。",
              "group": "按钮模版>0>btn2"
            }
          ],
          "snapshotURL": "symbols/develop/uiotos/arranged/controls/containers_icon/嵌套容器.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __graphView(data,gv,cache);}",
          "width": 200,
          "height": 120,
          "fitSize": true,
          "pixelPerfect": false,
          "comps": [
            {
              "type": "text",
              "text": {
                "func": "__ht__function(data, view) {\n// return data.ca('__loadingText')[!data.ca('__loadingStatus')]\n}",
                "value": "…"
              },
              "align": "center",
              "color": {
                "func": "attr@__loadingColor",
                "value": "rgb(150,150,150)"
              },
              "font": {
                "func": "attr@__loadingFont",
                "value": "12px arial, sans-serif"
              },
              "visible": {
                "func": "attr@__loadingVisible",
                "value": false
              },
              "layoutH": "center",
              "layoutV": "center",
              "displayName": "Text（Text1）",
              "rect": [
                74.69339,
                53.1422,
                50.61322,
                13.7156
              ]
            }
          ],
          "uuid": "B8B8D38B-A3C2-437F-912D-BC7D336DCD98"
        },
        "host": {
          "__i": 74139
        },
        "position": {
          "x": 544.34612,
          "y": 499.10708
        },
        "width": 456.78458,
        "height": 70
      },
      "s": {
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)",
        "interactive": true,
        "image.stretch": "uniform",
        "label.opacity": 0,
        "attach.row.index": 3,
        "attach.column.index": 1,
        "2d.movable": false,
        "2d.selectable": false
      },
      "a": {
        "symbol": "symbols/develop/uiotos/arranged/controls/containers/嵌套容器.json",
        "display": "./按钮模版.json",
        "__loadingStatus": false,
        "isLoadingGet": false,
        "innerLayoutMode": "fullScreen",
        "innerBackground": "rgb(30,70,116)",
        "origin_width": 221.64199,
        "origin_height": 109.46738,
        "toolTipRaw": "<span style='font-weight:bold;color:rgb(125,195,125)'>说明：</span><span style='color:rgb(125,195,125);line-height:1.8em;letter-spacing:1px;'>\n<br>网格内布局的图元不允许拖动</span>",
        "按钮模版>0>btn2>a:ht.text": "事务中心",
        "按钮模版>0>btn2>a:iconPath": "symbols/develop/uiotos/arranged/icons/首页/home-259.json",
        "shadowEnabled": false
      }
    },
    {
      "c": "ht.Node",
      "i": 74151,
      "p": {
        "name": "func",
        "displayName": "工具函数（func1）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "tag": "func1",
        "dataBindings": {
          "a": {
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "output": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "outputByEvent": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "inputs": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "exec": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "arrExec": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onOutput": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_type": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_title": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_region": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_duration": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_fixedWidth": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_fixedHeight": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Thu Aug 01 2024 10:11:12 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "function",
              "valueType": "ToolFunction",
              "defaultValue": "messageAlert",
              "name": "功能选项",
              "group": "功能",
              "extraInfo": "*",
              "description": "信息提示/警告/错误"
            },
            {
              "attr": "noteTips",
              "valueType": "Multiline",
              "name": "别名注释",
              "bindIgnored": true,
              "description": "默认为函数名称，可备注修改。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#Hw6Bw' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#iehe9 style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "dynamicCreate": true
            },
            {
              "attr": "color",
              "valueType": "Color",
              "name": "显示颜色",
              "defaultValue": "rgb(51,153,255)",
              "description": "图标和文字颜色。\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#iehe9 style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "extraInfo": "*",
              "dynamicCreate": true
            },
            {
              "attr": "exeWhenInput",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "输入赋值时执行",
              "bindIgnored": true,
              "description": "值输入且变化时，自动触发函数执行。\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#iehe9 style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "dynamicCreate": true
            },
            {
              "attr": "resetAfterInput",
              "valueType": "Boolean",
              "name": "输入赋值后清空",
              "description": "值输入并执行后，会自动复位成空\n                对象{}，确保下次任何输入会触发变化。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#Qo3GX' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#iehe9 style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "defaultValue": false,
              "bindIgnored": true,
              "extraInfo": "★",
              "dynamicCreate": true
            },
            {
              "attr": "inputsArrToObj",
              "valueType": "Boolean",
              "name": "输入数组转对象",
              "description": "是否切换成对象格式显示和输入。\n                注意：切换方式不会改变值本身。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#Jij1U' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#iehe9 style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "defaultValue": true,
              "bindIgnored": true,
              "extraInfo": "★",
              "dynamicCreate": true
            },
            {
              "attr": "stripSingleInput",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输入组单个取出",
              "description": "输入组为数组且只有1个元素时，取出\n                <br>这个元素作为实际输入值，代替原先的输入。默\n                <br>认inputs为数组格式，手动输入时通常会在数组\n                <br>的首元素输入，本属性保持默认勾选时，实际计\n                <br>算会以首元素作为实际输入值。\n                <br>也可以勾选“输入数组转对象”，此时输入组的属\n                <br>性栏由数组切换为对象输入，就可以任意输入非\n                <br>数组类型的值了。\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#iehe9 style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "extraInfo": "~",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "exeWhenLoad",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "组件加载时执行",
              "description": "所在的页面加载时，组件自动触发执行。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#OAge1' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#iehe9 style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "extraInfo": "*",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "oldValueMerge",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "输出合并非覆盖",
              "description": "输出与目标属性值合并，非默认覆盖。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#ACnaO' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#iehe9 style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "extraInfo": "★",
              "dynamicCreate": true
            },
            {
              "attr": "outputByEvent",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输出经事件返回",
              "description": "直接输出属性值，而非默认表单数据。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#mcfhK' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#iehe9 style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "extraInfo": "★",
              "dynamicCreate": true
            },
            {
              "attr": "parseFailedNull",
              "valueType": "Boolean",
              "defaultValue": true,
              "name": "输出解析默认空",
              "description": "解析失败未提取到字段值时，返回空。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#awhIA' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#iehe9 style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "extraInfo": "*",
              "dynamicCreate": true
            },
            {
              "attr": "inputs",
              "valueType": "ObjectArray",
              "name": "输入（组）",
              "defaultValue": [],
              "description": "工具函数的输入。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#aTR5v' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n用于设置信息内容。点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#iehe9 style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "dynamicCreate": true
            },
            {
              "attr": "_type",
              "name": "提示类型 ☆",
              "bindIgnored": true,
              "description": "选择提示的类型，包括错误、警告等。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#xjFTO' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "valueType": "MessageType",
              "defaultValue": "warn",
              "dynamicCreate": true
            },
            {
              "attr": "_title",
              "valueType": "String",
              "name": "标题文字 ☆",
              "defaultValue": "提示",
              "bindIgnored": true,
              "description": "显示标题。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#RZSQ9' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "dynamicCreate": true
            },
            {
              "attr": "_region",
              "valueType": "Region",
              "name": "显示位置 ☆",
              "defaultValue": "top",
              "bindIgnored": true,
              "description": "信息显示在屏幕的相对位置。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#jtgSW' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "dynamicCreate": true
            },
            {
              "attr": "_duration",
              "valueType": "PositiveNumber",
              "defaultValue": 1000,
              "name": "持续时间 ☆",
              "bindIgnored": true,
              "description": "信息停留的时长，0为不自动消失。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#BdQHk' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "dynamicCreate": true
            },
            {
              "attr": "_fixedWidth",
              "valueType": "PositiveNumber",
              "defaultValue": 300,
              "name": "固定宽度 ☆",
              "bindIgnored": true,
              "description": "提示区域宽度（提示条或对话框）。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#lVQFA' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "dynamicCreate": true
            },
            {
              "attr": "_fixedHeight",
              "valueType": "PositiveNumber",
              "defaultValue": 160,
              "name": "固定高度 ☆",
              "bindIgnored": true,
              "description": "固定高度（仅对弹窗确认选项有效）。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#ZJQFE' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>",
              "dynamicCreate": true
            },
            {
              "attr": "delay",
              "valueType": "PositiveNumber",
              "defaultValue": 0,
              "name": "延时执行毫秒",
              "description": "异步延迟执行时间（ms）。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#K5Me7' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#iehe9 style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "extraInfo": "*",
              "dynamicCreate": true
            },
            {
              "attr": "exec",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "执行",
              "description": "触发工具函数执行。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#yMMTA' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#iehe9 style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "dynamicCreate": true
            },
            {
              "attr": "arrExec",
              "valueType": "Boolean",
              "defaultValue": false,
              "name": "遍历执行",
              "description": "数组遍历执行。当输入为数组时，\n                将拆成逐项单独单独顺次执行。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#ovTxm' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#iehe9 style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "extraInfo": "*",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "whenOutputing",
              "valueType": "MultiComboBox",
              "name": "whenOutputing",
              "extraInfo": "~",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "changeOutputTo",
              "valueType": "MultiComboBox",
              "extraInfo": "~",
              "defaultValue": "不转换",
              "name": "changeOutputTo",
              "bindIgnored": true,
              "dynamicCreate": true
            },
            {
              "attr": "output",
              "valueType": "Object",
              "name": "输出",
              "description": "函数执行后的结果输出。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#YPMiQ' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#iehe9 style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "dynamicCreate": true
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "description": "用户数据。\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#iehe9 style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "bindIgnored": true,
              "name": "userData",
              "dynamicCreate": true
            },
            {
              "attr": "onOutput",
              "valueType": "Function",
              "description": "函数执行完毕输出结果时触发。<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#d7xnO' style=\"color:rgb(96,172,252)\" target='_blank'>详情</a>\n点击查阅<a href=https://www.yuque.com/liuhuo-nc809/uiotos/bb6hr2sdhaz8gz8m#iehe9 style=\"color:rgb(96,172,252)\" target='_blank'>组件文档</a>",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value"
                ]
              },
              "name": "onOutput",
              "dynamicCreate": true
            },
            {
              "attr": "bindControlsTag",
              "valueType": "ObjectArray",
              "group": "bindControls",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "ObjectArray",
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "description": "",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "ObjectArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "ObjectArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node, oldVal, form, type, inner) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type",
                  "inner"
                ],
                "classify": "*"
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            }
          ],
          "renderHTML": "__ht__function(data, gv, cache) {return __convertor(data,gv,cache);}",
          "width": 100,
          "height": 100,
          "comps": [
            {
              "type": "shape",
              "background": {
                "func": "attr@color",
                "value": "rgb(124,145,155)"
              },
              "borderWidth": 1,
              "borderColor": {
                "func": "attr@color",
                "value": "rgb(124,145,155)"
              },
              "pixelPerfect": true,
              "displayName": "Shape（Shape1）",
              "points": "__ht__list[\n  {\n    \"x\": 58.86957,\n    \"y\": 67.97079\n  },\n  {\n    \"x\": 49.01109,\n    \"y\": 67.97079\n  },\n  {\n    \"x\": 40.89878,\n    \"y\": 59.85848\n  },\n  {\n    \"x\": 40.89878,\n    \"y\": 50\n  },\n  {\n    \"x\": 40.89878,\n    \"y\": 40.14152\n  },\n  {\n    \"x\": 49.01109,\n    \"y\": 32.02921\n  },\n  {\n    \"x\": 58.86957,\n    \"y\": 32.02921\n  },\n  {\n    \"x\": 68.59911,\n    \"y\": 32.21168\n  },\n  {\n    \"x\": 76.50338,\n    \"y\": 40.26558\n  },\n  {\n    \"x\": 76.50338,\n    \"y\": 49.99684\n  },\n  {\n    \"x\": 76.50338,\n    \"y\": 59.7281\n  },\n  {\n    \"x\": 68.59911,\n    \"y\": 67.78201\n  },\n  {\n    \"x\": 58.86957,\n    \"y\": 67.96446\n  },\n  {\n    \"x\": 58.86957,\n    \"y\": 67.97079\n  },\n  {\n    \"x\": 36.75362,\n    \"y\": 50\n  },\n  {\n    \"x\": 36.75362,\n    \"y\": 62.13244\n  },\n  {\n    \"x\": 46.73712,\n    \"y\": 72.11595\n  },\n  {\n    \"x\": 58.86957,\n    \"y\": 72.11595\n  },\n  {\n    \"x\": 71.00201,\n    \"y\": 72.11595\n  },\n  {\n    \"x\": 80.98551,\n    \"y\": 62.13244\n  },\n  {\n    \"x\": 80.98551,\n    \"y\": 50\n  },\n  {\n    \"x\": 80.98551,\n    \"y\": 37.86756\n  },\n  {\n    \"x\": 71.00201,\n    \"y\": 27.88405\n  },\n  {\n    \"x\": 58.86957,\n    \"y\": 27.88405\n  },\n  {\n    \"x\": 46.73712,\n    \"y\": 27.88405\n  },\n  {\n    \"x\": 36.75362,\n    \"y\": 37.86756\n  },\n  {\n    \"x\": 36.75362,\n    \"y\": 50\n  },\n  {\n    \"x\": 61.63406,\n    \"y\": 41.70652\n  },\n  {\n    \"x\": 61.63406,\n    \"y\": 40.18996\n  },\n  {\n    \"x\": 60.38612,\n    \"y\": 38.94203\n  },\n  {\n    \"x\": 58.86957,\n    \"y\": 38.94203\n  },\n  {\n    \"x\": 57.35301,\n    \"y\": 38.94203\n  },\n  {\n    \"x\": 56.10508,\n    \"y\": 40.18996\n  },\n  {\n    \"x\": 56.10508,\n    \"y\": 41.70652\n  },\n  {\n    \"x\": 56.10508,\n    \"y\": 43.22307\n  },\n  {\n    \"x\": 57.35301,\n    \"y\": 44.47102\n  },\n  {\n    \"x\": 58.86957,\n    \"y\": 44.47102\n  },\n  {\n    \"x\": 60.38612,\n    \"y\": 44.47102\n  },\n  {\n    \"x\": 61.63406,\n    \"y\": 43.22307\n  },\n  {\n    \"x\": 61.63406,\n    \"y\": 41.70652\n  },\n  {\n    \"x\": 60.94215,\n    \"y\": 58.98539\n  },\n  {\n    \"x\": 60.94215,\n    \"y\": 60.12238\n  },\n  {\n    \"x\": 60.00655,\n    \"y\": 61.05797\n  },\n  {\n    \"x\": 58.86957,\n    \"y\": 61.05797\n  },\n  {\n    \"x\": 57.73258,\n    \"y\": 61.05797\n  },\n  {\n    \"x\": 56.79699,\n    \"y\": 60.12238\n  },\n  {\n    \"x\": 56.79699,\n    \"y\": 58.98539\n  },\n  {\n    \"x\": 56.79699,\n    \"y\": 49.31124\n  },\n  {\n    \"x\": 56.79699,\n    \"y\": 48.17426\n  },\n  {\n    \"x\": 57.73258,\n    \"y\": 47.23867\n  },\n  {\n    \"x\": 58.86957,\n    \"y\": 47.23867\n  },\n  {\n    \"x\": 60.00655,\n    \"y\": 47.23867\n  },\n  {\n    \"x\": 60.94215,\n    \"y\": 48.17426\n  },\n  {\n    \"x\": 60.94215,\n    \"y\": 49.31124\n  },\n  {\n    \"x\": 60.94215,\n    \"y\": 58.98539\n  }\n]",
              "segments": "__ht__list[\n  1,\n  4,\n  4,\n  4,\n  4,\n  2,\n  5,\n  1,\n  4,\n  4,\n  4,\n  4,\n  5,\n  1,\n  4,\n  4,\n  4,\n  4,\n  5,\n  1,\n  4,\n  4,\n  2,\n  4,\n  4,\n  2,\n  5\n]",
              "unionRect": {
                "x": 36.75362,
                "y": 27.88405,
                "width": 44.23189,
                "height": 44.2319
              }
            },
            {
              "type": "shape",
              "background": {
                "func": "attr@color",
                "value": "rgb(124,145,155)"
              },
              "borderColor": {
                "func": "attr@color",
                "value": null
              },
              "points": "__ht__list[\n  {\n    \"x\": 37.99236,\n    \"y\": 23.6093\n  },\n  {\n    \"x\": 36.69569,\n    \"y\": 22.19018\n  },\n  {\n    \"x\": 35.96431,\n    \"y\": 21.38852\n  },\n  {\n    \"x\": 34.89152,\n    \"y\": 21.59925\n  },\n  {\n    \"x\": 34.37387,\n    \"y\": 22.69269\n  },\n  {\n    \"x\": 30.59331,\n    \"y\": 30.69456\n  },\n  {\n    \"x\": 28.52778,\n    \"y\": 40.29829\n  },\n  {\n    \"x\": 28.52778,\n    \"y\": 49.99926\n  },\n  {\n    \"x\": 28.52778,\n    \"y\": 59.70319\n  },\n  {\n    \"x\": 30.59331,\n    \"y\": 69.30691\n  },\n  {\n    \"x\": 34.37387,\n    \"y\": 77.30583\n  },\n  {\n    \"x\": 34.89152,\n    \"y\": 78.40074\n  },\n  {\n    \"x\": 35.96431,\n    \"y\": 78.61\n  },\n  {\n    \"x\": 36.69569,\n    \"y\": 77.80834\n  },\n  {\n    \"x\": 37.99236,\n    \"y\": 76.38922\n  },\n  {\n    \"x\": 38.68524,\n    \"y\": 75.63177\n  },\n  {\n    \"x\": 38.81188,\n    \"y\": 74.24655\n  },\n  {\n    \"x\": 38.32462,\n    \"y\": 73.20763\n  },\n  {\n    \"x\": 35.13261,\n    \"y\": 66.39646\n  },\n  {\n    \"x\": 33.39024,\n    \"y\": 58.23986\n  },\n  {\n    \"x\": 33.39024,\n    \"y\": 49.99926\n  },\n  {\n    \"x\": 33.39024,\n    \"y\": 41.76014\n  },\n  {\n    \"x\": 35.13261,\n    \"y\": 33.60354\n  },\n  {\n    \"x\": 38.32462,\n    \"y\": 26.78942\n  },\n  {\n    \"x\": 38.81086,\n    \"y\": 25.75049\n  },\n  {\n    \"x\": 38.68424,\n    \"y\": 24.36674\n  },\n  {\n    \"x\": 37.99236,\n    \"y\": 23.6093\n  }\n]",
              "segments": "__ht__list[\n  1,\n  2,\n  4,\n  4,\n  4,\n  4,\n  2,\n  4,\n  4,\n  4,\n  4,\n  5\n]",
              "unionRect": {
                "x": 28.52778,
                "y": 21.38852,
                "width": 10.2841,
                "height": 57.22148
              }
            },
            {
              "type": "shape",
              "background": {
                "func": "attr@color",
                "value": "rgb(124,145,155)"
              },
              "borderColor": {
                "func": "attr@color",
                "value": null
              },
              "points": "__ht__list[\n  {\n    \"x\": 84.55899,\n    \"y\": 22.69269\n  },\n  {\n    \"x\": 84.07581,\n    \"y\": 21.59778\n  },\n  {\n    \"x\": 83.07447,\n    \"y\": 21.38852\n  },\n  {\n    \"x\": 82.39179,\n    \"y\": 22.19018\n  },\n  {\n    \"x\": 81.1815,\n    \"y\": 23.6093\n  },\n  {\n    \"x\": 80.53476,\n    \"y\": 24.36674\n  },\n  {\n    \"x\": 80.41656,\n    \"y\": 25.75197\n  },\n  {\n    \"x\": 80.87136,\n    \"y\": 26.79089\n  },\n  {\n    \"x\": 83.85076,\n    \"y\": 33.60206\n  },\n  {\n    \"x\": 85.4771,\n    \"y\": 41.75866\n  },\n  {\n    \"x\": 85.4771,\n    \"y\": 49.99926\n  },\n  {\n    \"x\": 85.4771,\n    \"y\": 58.23839\n  },\n  {\n    \"x\": 83.85076,\n    \"y\": 66.395\n  },\n  {\n    \"x\": 80.87136,\n    \"y\": 73.20911\n  },\n  {\n    \"x\": 80.4175,\n    \"y\": 74.24803\n  },\n  {\n    \"x\": 80.5357,\n    \"y\": 75.63177\n  },\n  {\n    \"x\": 81.1815,\n    \"y\": 76.3907\n  },\n  {\n    \"x\": 82.39179,\n    \"y\": 77.80982\n  },\n  {\n    \"x\": 83.07447,\n    \"y\": 78.61148\n  },\n  {\n    \"x\": 84.07581,\n    \"y\": 78.40222\n  },\n  {\n    \"x\": 84.55899,\n    \"y\": 77.30731\n  },\n  {\n    \"x\": 88.08774,\n    \"y\": 69.30396\n  },\n  {\n    \"x\": 90.0157,\n    \"y\": 59.70024\n  },\n  {\n    \"x\": 90.0157,\n    \"y\": 49.99926\n  },\n  {\n    \"x\": 90.0157,\n    \"y\": 40.29533\n  },\n  {\n    \"x\": 88.08774,\n    \"y\": 30.69162\n  },\n  {\n    \"x\": 84.55899,\n    \"y\": 22.69269\n  }\n]",
              "segments": "__ht__list[\n  1,\n  4,\n  2,\n  4,\n  4,\n  4,\n  4,\n  2,\n  4,\n  4,\n  4,\n  5\n]",
              "unionRect": {
                "x": 80.41656,
                "y": 21.38852,
                "width": 9.59914,
                "height": 57.22296
              }
            },
            {
              "type": "shape",
              "background": {
                "func": "attr@color",
                "value": "rgb(124,145,155)"
              },
              "borderWidth": 1,
              "borderColor": {
                "func": "attr@color",
                "value": "rgb(124,145,155)"
              },
              "displayName": "Shape（Shape1）",
              "points": "__ht__list[\n  {\n    \"x\": 24.9843,\n    \"y\": 50.96154\n  },\n  {\n    \"x\": 24.9843,\n    \"y\": 50.43029\n  },\n  {\n    \"x\": 24.50484,\n    \"y\": 50\n  },\n  {\n    \"x\": 23.91287,\n    \"y\": 50\n  },\n  {\n    \"x\": 20.69858,\n    \"y\": 50\n  },\n  {\n    \"x\": 17.44412,\n    \"y\": 50\n  },\n  {\n    \"x\": 14.80573,\n    \"y\": 52.36779\n  },\n  {\n    \"x\": 14.80573,\n    \"y\": 55.28846\n  },\n  {\n    \"x\": 14.80573,\n    \"y\": 58.17308\n  },\n  {\n    \"x\": 11.05573,\n    \"y\": 58.17308\n  },\n  {\n    \"x\": 10.46376,\n    \"y\": 58.17308\n  },\n  {\n    \"x\": 9.9843,\n    \"y\": 58.60337\n  },\n  {\n    \"x\": 9.9843,\n    \"y\": 59.13461\n  },\n  {\n    \"x\": 9.9843,\n    \"y\": 60.09616\n  },\n  {\n    \"x\": 9.9843,\n    \"y\": 60.6274\n  },\n  {\n    \"x\": 10.46376,\n    \"y\": 61.05769\n  },\n  {\n    \"x\": 11.05573,\n    \"y\": 61.05769\n  },\n  {\n    \"x\": 14.80573,\n    \"y\": 61.05769\n  },\n  {\n    \"x\": 14.80573,\n    \"y\": 69.71154\n  },\n  {\n    \"x\": 14.80573,\n    \"y\": 71.03906\n  },\n  {\n    \"x\": 13.6064,\n    \"y\": 72.11538\n  },\n  {\n    \"x\": 12.12716,\n    \"y\": 72.11538\n  },\n  {\n    \"x\": 11.05573,\n    \"y\": 72.11538\n  },\n  {\n    \"x\": 10.46376,\n    \"y\": 72.11538\n  },\n  {\n    \"x\": 9.9843,\n    \"y\": 72.54567\n  },\n  {\n    \"x\": 9.9843,\n    \"y\": 73.07693\n  },\n  {\n    \"x\": 9.9843,\n    \"y\": 74.03846\n  },\n  {\n    \"x\": 9.9843,\n    \"y\": 74.56971\n  },\n  {\n    \"x\": 10.46376,\n    \"y\": 75\n  },\n  {\n    \"x\": 11.05573,\n    \"y\": 75\n  },\n  {\n    \"x\": 12.12716,\n    \"y\": 75\n  },\n  {\n    \"x\": 15.38162,\n    \"y\": 75\n  },\n  {\n    \"x\": 18.02001,\n    \"y\": 72.63221\n  },\n  {\n    \"x\": 18.02001,\n    \"y\": 69.71154\n  },\n  {\n    \"x\": 18.02001,\n    \"y\": 61.05769\n  },\n  {\n    \"x\": 21.77002,\n    \"y\": 61.05769\n  },\n  {\n    \"x\": 22.36198,\n    \"y\": 61.05769\n  },\n  {\n    \"x\": 22.84144,\n    \"y\": 60.6274\n  },\n  {\n    \"x\": 22.84144,\n    \"y\": 60.09616\n  },\n  {\n    \"x\": 22.84144,\n    \"y\": 59.13461\n  },\n  {\n    \"x\": 22.84144,\n    \"y\": 58.60337\n  },\n  {\n    \"x\": 22.36198,\n    \"y\": 58.17308\n  },\n  {\n    \"x\": 21.77002,\n    \"y\": 58.17308\n  },\n  {\n    \"x\": 18.02001,\n    \"y\": 58.17308\n  },\n  {\n    \"x\": 18.02001,\n    \"y\": 55.28846\n  },\n  {\n    \"x\": 18.02001,\n    \"y\": 53.96094\n  },\n  {\n    \"x\": 19.21935,\n    \"y\": 52.88462\n  },\n  {\n    \"x\": 20.69858,\n    \"y\": 52.88462\n  },\n  {\n    \"x\": 23.91287,\n    \"y\": 52.88462\n  },\n  {\n    \"x\": 24.50484,\n    \"y\": 52.88462\n  },\n  {\n    \"x\": 24.9843,\n    \"y\": 52.45433\n  },\n  {\n    \"x\": 24.9843,\n    \"y\": 51.92307\n  },\n  {\n    \"x\": 24.9843,\n    \"y\": 50.96154\n  }\n]",
              "segments": "__ht__list[\n  1,\n  4,\n  2,\n  4,\n  2,\n  2,\n  4,\n  2,\n  4,\n  2,\n  2,\n  4,\n  2,\n  4,\n  2,\n  4,\n  2,\n  4,\n  2,\n  2,\n  4,\n  2,\n  4,\n  2,\n  2,\n  4,\n  2,\n  4,\n  2,\n  5\n]",
              "unionRect": {
                "x": 9.9843,
                "y": 50,
                "width": 15,
                "height": 25
              }
            },
            {
              "type": "rect",
              "background": "rgba(0,0,0,0.01)",
              "borderColor": "#979797",
              "pixelPerfect": true,
              "displayName": "n（n1）",
              "rect": [
                0,
                0,
                100,
                100
              ]
            }
          ],
          "uuid": "B63BEFAD-EF72-48BA-A70A-6A04268613AD"
        },
        "host": {
          "__i": 74110
        },
        "position": {
          "x": 645.17938,
          "y": -214.12471
        },
        "width": 100,
        "height": 100
      },
      "s": {
        "label.offset.y": 5,
        "label.color": "rgb(51,153,255)",
        "interactive": true,
        "2d.editable": false,
        "select.width": 0.5,
        "select.type": "roundRect",
        "select.color": "rgb(124,145,155)",
        "label": "信息提示/警告/错误",
        "label.font": "26px Microsoft YaHei",
        "label.align": "left",
        "2d.movable": false,
        "label.position": 3,
        "layout.h": "right",
        "layout.v": "top",
        "label.opacity": 1
      },
      "a": {
        "toolTipRaw": "信息提示/警告/错误<br>messageAlert",
        "noteTips": "信息提示/警告/错误",
        "bindEvents": [
          "*",
          "onOutput"
        ],
        "输出遇到空值": "全部（*）",
        "输出遇到空值-list": [
          "全部（*）",
          "空对象（null）",
          "未定义（undefined）",
          "空字符串（\"\"）",
          "否（false）",
          "等于零（0）",
          "小于零（<0）",
          "NaN"
        ],
        "symbol": "symbols/develop/uiotos/arranged/controls/functions/01-常用/信息提示警告错误.json",
        "inputs": [
          "您点击了按钮！"
        ],
        "icon": "symbols/develop/uiotos/icons/functions/function.json",
        "arrExec": false,
        "inputsArrToObj": false,
        "_title": "操作提示",
        "_type": "info",
        "inputKeys": [
          "0"
        ],
        "inputValues": [
          "您点击了按钮！"
        ],
        "exec": false,
        "jsonStruct": 1,
        "stripSingleInput": true
      }
    },
    {
      "c": "ht.Node",
      "i": 74152,
      "p": {
        "name": "不规则图形",
        "displayName": "不规则图形（不规则图形1）",
        "tag": "不规则图形1",
        "image": "symbols/develop/uiotos/arranged/controls/draws/1-绘制/不规则图形.json",
        "position": {
          "x": -195.57695,
          "y": -53.82852
        }
      },
      "s": {
        "2d.visible": false,
        "label.opacity": 0,
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)"
      }
    },
    {
      "c": "ht.Node",
      "i": 74153,
      "p": {
        "name": "不规则图形",
        "displayName": "不规则图形（不规则图形2）",
        "tag": "不规则图形2",
        "image": "symbols/develop/uiotos/arranged/controls/draws/1-绘制/不规则图形.json",
        "position": {
          "x": -120.47226,
          "y": -421.65292
        }
      },
      "s": {
        "2d.visible": false,
        "label.opacity": 0,
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)"
      }
    },
    {
      "c": "ht.Node",
      "i": 74154,
      "p": {
        "name": "矩形",
        "displayName": "矩形（矩形1）",
        "tag": "矩形1",
        "image": "symbols/develop/uiotos/arranged/controls/draws/2-规则图形/矩形.json",
        "position": {
          "x": 131.58082,
          "y": -326.3888
        }
      },
      "s": {
        "2d.visible": false,
        "label.opacity": 0,
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)"
      }
    },
    {
      "c": "ht.Node",
      "i": 74155,
      "p": {
        "name": "不规则图形",
        "displayName": "不规则图形（不规则图形4）",
        "tag": "不规则图形4",
        "image": "symbols/develop/uiotos/arranged/controls/draws/1-绘制/不规则图形.json",
        "position": {
          "x": -79.12792,
          "y": -298.70791
        }
      },
      "s": {
        "2d.visible": false,
        "label.opacity": 0,
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "label.color": "rgb(61,61,61)"
      }
    },
    {
      "c": "ht.Shape",
      "i": 74156,
      "p": {
        "name": "Shape",
        "displayName": "Shape（Shape1）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "tag": "Shape1",
        "host": {
          "__i": 74110
        },
        "position": {
          "x": 536.75491,
          "y": -113.93389
        },
        "width": 1497.2956,
        "height": 0,
        "segments": {
          "__a": [
            1,
            2
          ]
        },
        "points": {
          "__a": [
            {
              "x": -211.89289,
              "y": -113.93389
            },
            {
              "x": 1285.40271,
              "y": -113.93389
            }
          ]
        }
      },
      "s": {
        "shape.background": null,
        "shape.border.width": 1,
        "label.opacity": 0,
        "label.position": 17,
        "label.color": "rgb(61,61,61)",
        "2d.movable": false,
        "interactive": true,
        "image.stretch": "uniform",
        "layout.h": "leftright",
        "layout.v": "top",
        "border.width": 0,
        "shape.border.color": "rgba(55,154,219,0.3)"
      }
    },
    {
      "c": "ht.Shape",
      "i": 74157,
      "p": {
        "name": "Shape",
        "displayName": "Shape（Shape2）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "tag": "Shape2",
        "host": {
          "__i": 74110
        },
        "position": {
          "x": 537.45931,
          "y": 118.02282
        },
        "width": 1497.2956,
        "height": 0,
        "segments": {
          "__a": [
            1,
            2
          ]
        },
        "points": {
          "__a": [
            {
              "x": -211.18849,
              "y": 118.02282
            },
            {
              "x": 1286.10711,
              "y": 118.02282
            }
          ]
        }
      },
      "s": {
        "shape.background": null,
        "shape.border.width": 1,
        "label.opacity": 0,
        "label.position": 17,
        "label.color": "rgb(61,61,61)",
        "2d.movable": false,
        "interactive": true,
        "image.stretch": "uniform",
        "layout.h": "leftright",
        "layout.v": "top",
        "shape.border.color": "rgba(55,154,219,0.3)"
      }
    },
    {
      "c": "ht.Node",
      "i": 74158,
      "p": {
        "name": "btn",
        "displayName": "普通按钮（btn5）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "tag": "btn5",
        "dataBindings": {
          "a": {
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onFormClick": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_bindEvents_0": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Mon Jun 24 2024 07:35:01 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "ht.disabled",
              "valueType": "Boolean",
              "name": "禁用",
              "defaultValue": false,
              "description": "禁用",
              "group": "功能"
            },
            {
              "attr": "bindTabview",
              "valueType": "StringArray",
              "defaultValue": [
                "tab1",
                "0"
              ],
              "name": "bindTabview"
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "name": "userData"
            },
            {
              "attr": "onFormClick",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value",
                  "extra"
                ]
              },
              "description": "当点击时对外触发。",
              "name": "onFormClick"
            },
            {
              "attr": "clicked",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "event",
                  "data",
                  "view"
                ]
              },
              "defaultValue": "__ht__function(event, data, view) {setBindTabviewIndex(data,data.ca('bindTabview'));\r\ni.formEventBubblingUpper(\r\n    data,\r\n    view,\r\n    null,\r\n    'onFormClick',\r\n    null,\r\n    false\r\n);}",
              "name": "clicked"
            },
            {
              "attr": "fixedHeight",
              "valueType": "PositiveNumber",
              "group": "外观",
              "name": "fixedHeight"
            },
            {
              "attr": "ht.text",
              "valueType": "Multiline",
              "defaultValue": "按钮",
              "description": "文本。",
              "name": "ht.text"
            },
            {
              "attr": "ht.font",
              "valueType": "Font",
              "name": "字体",
              "description": "字体。"
            },
            {
              "attr": "ht.textColor",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(255,255,255)",
                "rgb(255,255,255)",
                "rgb(255,255,255)",
                "rgb(127,127,127)"
              ],
              "description": "文本颜色。\n<br>索引0、1、2、3分别对应默认、\n<br>悬停、按下时、禁用时文字颜色。",
              "name": "ht.textColor"
            },
            {
              "attr": "ht.borderWidth",
              "valueType": "PositiveNumber",
              "defaultValue": 1,
              "name": "边框宽度",
              "description": "边框宽度。"
            },
            {
              "attr": "ht.borderRadius",
              "valueType": "Number",
              "name": "边框圆角",
              "defaultValue": 3
            },
            {
              "attr": "ht.borderColor",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(255,255,255)",
                "rgb(255,255,255)",
                "rgb(255,255,255)",
                "rgb(200,200,200)"
              ],
              "name": "边框颜色",
              "description": "边框颜色。\n<br>索引0、1、2、3分别对应默认、\n<br>悬停、按下、禁用时边框颜色。"
            },
            {
              "attr": "background",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(55,125,255)",
                "rgba(55,125,255,0.9)",
                "rgba(55,125,255,0.8)",
                "rgb(200,200,200)"
              ],
              "description": "背景颜色。\n<br>索引与背景色对应如下：\n<br>0：默认背景色\n<br>1：悬停/划过背景色\n<br>2：按下背景色\n<br>3：禁用背景色",
              "name": "background"
            },
            {
              "attr": "darkStyle",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "深色风格。",
              "name": "darkStyle"
            },
            {
              "attr": "iconPath",
              "valueType": "Image",
              "description": "图标路径。",
              "name": "图标路径"
            },
            {
              "attr": "ht.iconPosition",
              "valueType": "Orientation",
              "name": "图标位置",
              "description": "图标位置。"
            },
            {
              "attr": "iconSize",
              "valueType": "NumberArray",
              "defaultValue": [
                20,
                20
              ],
              "name": "图标尺寸",
              "description": "索引0为宽度，索引1为高度。"
            },
            {
              "attr": "iconGap",
              "valueType": "PositiveNumber",
              "defaultValue": 5,
              "description": "图标与文字间距 。",
              "name": "iconGap"
            },
            {
              "attr": "icon-background",
              "valueType": "Color",
              "defaultValue": "rgb(255,255,255)",
              "name": "图标背景"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "ObjectArray",
              "defaultValue": [
                "func1"
              ],
              "group": "连线",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "ObjectArray",
              "defaultValue": [
                "a:exec"
              ],
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "defaultValue": [
                null
              ],
              "description": "",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "ObjectArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "ObjectArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type"
                ]
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "_bindEvents_0",
              "name": "连线事件_0",
              "valueType": "MultiComboBox",
              "defaultValue": "*",
              "group": "bindEvents",
              "description": "连线索引[0]的触发事件过滤器，默认全部通过",
              "dynamicCreate": true
            }
          ],
          "snapshotURL": "symbols/develop/uiotos/arranged/controls/forms_icon/普通按钮.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __button(data,gv,cache);}",
          "width": 80,
          "height": 42,
          "boundExtend": 2,
          "fitSize": true,
          "interactive": true,
          "pixelPerfect": false,
          "attachStyle": "close",
          "comps": [
            {
              "type": "components/develop/uiotos/base/button.json",
              "displayName": "button（button1）",
              "rect": [
                0,
                0,
                80,
                42
              ],
              "onDown": "__ht__function(event, data, view, point, width, height) {\nht.vector.buttonInteractor.onDown.apply(this, arguments);\n}",
              "onUp": "__ht__function(event, data, view, point, width, height) {\nht.vector.buttonInteractor.onUp.apply(this, arguments);\n}",
              "onEnter": "__ht__function(event, data, view, point, width, height) {\nht.vector.buttonInteractor.onEnter.apply(this, arguments);\n}",
              "onLeave": "__ht__function(event, data, view, point, width, height) {\nht.vector.buttonInteractor.onLeave.apply(this, arguments);\n}",
              "text": {
                "func": "attr@ht.text",
                "value": "BUTTON"
              },
              "disabled": {
                "func": "attr@ht.disabled",
                "value": false
              },
              "font": {
                "func": "attr@ht.font",
                "value": "12px arial, sans-serif"
              },
              "icon": {
                "func": "attr@iconPath"
              },
              "iconPosition": {
                "func": "attr@ht.iconPosition",
                "value": "left"
              },
              "iconWidth": {
                "func": "__ht__function(data, view) {\nlet wtmp = data.ca('ht.iconWidth'),\r\n    stmp = data.ca('iconSize');\r\nreturn wtmp ? wtmp : (stmp && stmp[0] ? stmp[0] : 20);\n}",
                "value": 20
              },
              "iconHeight": {
                "func": "__ht__function(data, view) {\nlet wtmp = data.ca('ht.iconHeight'),\r\nstmp = data.ca('iconSize');\r\nreturn wtmp ? wtmp : (stmp && stmp[1] ? stmp[1] : 20);\n}",
                "value": 20
              },
              "iconGap": {
                "func": "attr@iconGap",
                "value": 5
              },
              "textColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.textColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[0];\n}",
                "value": "rgb(255,255,255)"
              },
              "hoverTextColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.textColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[1];\n}"
              },
              "activeTextColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.textColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[2];\n}"
              },
              "disabledTextColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.textColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[3];\n}",
                "value": "#ebebeb"
              },
              "borderWidth": {
                "func": "attr@ht.borderWidth",
                "value": 0
              },
              "borderColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.borderColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[0];\n}",
                "value": null
              },
              "hoverBorderColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.borderColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[1];\n}"
              },
              "activeBorderColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.borderColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[2];\n}"
              },
              "disabledBorderColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.borderColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[3];\n}",
                "value": "rgba(235,235,235,0)"
              },
              "background": {
                "func": "__ht__function(data, view) {\nlet bkg = data.ca('ht.background'),\r\n    bkgs = data.ca('background');\r\nreturn bkg ? bkg : bkgs && bkgs[0];\n}",
                "value": "rgb(55,125,255)"
              },
              "hoverBackground": {
                "func": "__ht__function(data, view) {\nlet bkg = data.ca('ht.hoverBackground'),\r\n    bkgs = data.ca('background');\r\nreturn bkg ? bkg : bkgs && bkgs[1];\n}"
              },
              "activeBackground": {
                "func": "__ht__function(data, view) {\nlet bkg = data.ca('ht.activeBackground'),\r\n    bkgs = data.ca('background');\r\nreturn bkg ? bkg : bkgs && bkgs[2];\n}"
              },
              "disabledBackground": {
                "func": "__ht__function(data, view) {\nlet bkg = data.ca('ht.disabledBackground'),\r\n    bkgs = data.ca('background');\r\nreturn bkg ? bkg : bkgs && bkgs[3];\n}",
                "value": "#fafafa"
              },
              "borderRadius": {
                "func": "attr@ht.borderRadius",
                "value": "0"
              },
              "handleClick": {
                "func": "attr@clicked"
              },
              "getValue": "__ht__function(V){var R=T(Q,V);return R===N8&&X.properties&&(V=X.properties[V])?V.defaultValue:R}",
              "getColor": "__ht__function(V,R){return wm(!0===R?V:Q.getValue(V))}"
            }
          ],
          "uuid": "42BFF49B-A467-40A3-B49D-B5C2EB489114"
        },
        "host": {
          "__i": 74110
        },
        "position": {
          "x": -113.84609,
          "y": 75.31247
        },
        "width": 70,
        "height": 35
      },
      "s": {
        "label.opacity": 0,
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "interactive": true,
        "2d.movable": false,
        "layout.h": "left",
        "layout.v": "top"
      },
      "a": {
        "symbol": "symbols/develop/uiotos/base/button.json",
        "ht.borderWidth": 0,
        "ht.borderRadius": 10,
        "ht.text": "上     ↑",
        "background": [
          "rgb(224,224,224)",
          "rgb(247,247,247)",
          "rgb(230,230,230)",
          "rgb(200,200,200)"
        ],
        "ht.textColor": [
          "rgb(99,99,99)",
          "rgb(133,130,130)",
          "rgb(99,99,99)",
          "rgb(127,127,127)"
        ],
        "ht.borderColor": [
          "rgb(255,255,255)",
          "rgb(255,255,255)",
          "rgb(255,255,255)",
          "rgb(127,127,127)"
        ],
        "icon-background": "rgb(255,255,255)",
        "paramControlTag": [
          null
        ],
        "paramControlAttr": [
          null
        ],
        "bindControlsTag": [
          "func1"
        ],
        "bindControlsAttr": [
          "a:exec"
        ],
        "bindControlsVal": [
          null
        ],
        "_bindEvents_0": "*"
      }
    },
    {
      "c": "ht.Edge",
      "i": 74159,
      "p": {
        "name": "edge",
        "displayName": "0（edge6）",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        连线配置信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：执行@func1</li> \n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li> \n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>",
        "parent": {
          "__i": 74158
        },
        "tag": "edge6",
        "source": {
          "__i": 74158
        },
        "target": {
          "__i": 74151
        }
      },
      "s": {
        "label": "",
        "edge.color": "rgb(51,153,255)",
        "edge.width": 4,
        "edge.type": "v.h",
        "edge.flex": 50,
        "edge.corner.radius": 0,
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "rgb(51,153,255)",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 0,
        "label.position": 17,
        "edge.ripple.size": 2,
        "edge.ripple.length": 0,
        "edge.ripple.elevation": 100,
        "edge.ripple.both": true
      },
      "a": {
        "index": 0,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        连线配置信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：执行@func1</li> \n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li> \n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.Node",
      "i": 74160,
      "p": {
        "name": "btn",
        "displayName": "普通按钮（btn6）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "tag": "btn6",
        "dataBindings": {
          "a": {
            "userData": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "onFormClick": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            },
            "_bindEvents_0": {
              "id": "iotos.form",
              "idinfo": "",
              "isTplBinded": false,
              "func": "function formParser(rawData, node) {\r\n    try {\r\n        /********* TODO **********/\r\n\r\n\r\n        /************************/\r\n        return rawData;\r\n    } catch (err) {\r\n        return rawData;\r\n    }\r\n}"
            }
          }
        },
        "image": {
          "modified": "Mon Jun 24 2024 07:35:01 GMT+0800 (中国标准时间)",
          "dataBindings": [
            {
              "attr": "symbol",
              "valueType": "Image",
              "name": "symbol"
            },
            {
              "attr": "ht.disabled",
              "valueType": "Boolean",
              "name": "禁用",
              "defaultValue": false,
              "description": "禁用",
              "group": "功能"
            },
            {
              "attr": "bindTabview",
              "valueType": "StringArray",
              "defaultValue": [
                "tab1",
                "0"
              ],
              "name": "bindTabview"
            },
            {
              "attr": "userData",
              "valueType": "Object",
              "defaultValue": [],
              "name": "userData"
            },
            {
              "attr": "onFormClick",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "data",
                  "gv",
                  "cache",
                  "value",
                  "extra"
                ]
              },
              "description": "当点击时对外触发。",
              "name": "onFormClick"
            },
            {
              "attr": "clicked",
              "valueType": "Function",
              "extraInfo": {
                "arguments": [
                  "event",
                  "data",
                  "view"
                ]
              },
              "defaultValue": "__ht__function(event, data, view) {setBindTabviewIndex(data,data.ca('bindTabview'));\r\ni.formEventBubblingUpper(\r\n    data,\r\n    view,\r\n    null,\r\n    'onFormClick',\r\n    null,\r\n    false\r\n);}",
              "name": "clicked"
            },
            {
              "attr": "fixedHeight",
              "valueType": "PositiveNumber",
              "group": "外观",
              "name": "fixedHeight"
            },
            {
              "attr": "ht.text",
              "valueType": "Multiline",
              "defaultValue": "按钮",
              "description": "文本。",
              "name": "ht.text"
            },
            {
              "attr": "ht.font",
              "valueType": "Font",
              "name": "字体",
              "description": "字体。"
            },
            {
              "attr": "ht.textColor",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(255,255,255)",
                "rgb(255,255,255)",
                "rgb(255,255,255)",
                "rgb(127,127,127)"
              ],
              "description": "文本颜色。\n<br>索引0、1、2、3分别对应默认、\n<br>悬停、按下时、禁用时文字颜色。",
              "name": "ht.textColor"
            },
            {
              "attr": "ht.borderWidth",
              "valueType": "PositiveNumber",
              "defaultValue": 1,
              "name": "边框宽度",
              "description": "边框宽度。"
            },
            {
              "attr": "ht.borderRadius",
              "valueType": "Number",
              "name": "边框圆角",
              "defaultValue": 3
            },
            {
              "attr": "ht.borderColor",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(255,255,255)",
                "rgb(255,255,255)",
                "rgb(255,255,255)",
                "rgb(200,200,200)"
              ],
              "name": "边框颜色",
              "description": "边框颜色。\n<br>索引0、1、2、3分别对应默认、\n<br>悬停、按下、禁用时边框颜色。"
            },
            {
              "attr": "background",
              "valueType": "ColorArray",
              "defaultValue": [
                "rgb(55,125,255)",
                "rgba(55,125,255,0.9)",
                "rgba(55,125,255,0.8)",
                "rgb(200,200,200)"
              ],
              "description": "背景颜色。\n<br>索引与背景色对应如下：\n<br>0：默认背景色\n<br>1：悬停/划过背景色\n<br>2：按下背景色\n<br>3：禁用背景色",
              "name": "background"
            },
            {
              "attr": "darkStyle",
              "valueType": "Boolean",
              "defaultValue": true,
              "description": "深色风格。",
              "name": "darkStyle"
            },
            {
              "attr": "iconPath",
              "valueType": "Image",
              "description": "图标路径。",
              "name": "图标路径"
            },
            {
              "attr": "ht.iconPosition",
              "valueType": "Orientation",
              "name": "图标位置",
              "description": "图标位置。"
            },
            {
              "attr": "iconSize",
              "valueType": "NumberArray",
              "defaultValue": [
                20,
                20
              ],
              "name": "图标尺寸",
              "description": "索引0为宽度，索引1为高度。"
            },
            {
              "attr": "iconGap",
              "valueType": "PositiveNumber",
              "defaultValue": 5,
              "description": "图标与文字间距 。",
              "name": "iconGap"
            },
            {
              "attr": "icon-background",
              "valueType": "Color",
              "defaultValue": "rgb(255,255,255)",
              "name": "图标背景"
            },
            {
              "attr": "bindControlsTag",
              "valueType": "ObjectArray",
              "defaultValue": [
                "func1"
              ],
              "group": "连线",
              "name": "bindControlsTag"
            },
            {
              "attr": "bindControlsAttr",
              "valueType": "ObjectArray",
              "defaultValue": [
                "a:exec"
              ],
              "name": "bindControlsAttr"
            },
            {
              "attr": "bindControlsVal",
              "valueType": "ObjectArray",
              "defaultValue": [
                null
              ],
              "description": "",
              "name": "bindControlsVal"
            },
            {
              "attr": "paramControlTag",
              "valueType": "ObjectArray",
              "name": "paramControlTag"
            },
            {
              "attr": "paramControlAttr",
              "valueType": "ObjectArray",
              "name": "paramControlAttr"
            },
            {
              "attr": "paramsGenerator",
              "valueType": "Function",
              "defaultValue": "__ht__function(data, val, index, node,oldVal,form) {//绑定组索引对应的函数处理，用来动态生成复杂的参数变量传入\r\nswitch(index){\r\n    case 0:\r\n        break;\r\n    case 1:\r\n        break;\r\n    case 2:\r\n        break;\r\n    default:\r\n        break;\r\n}\r\n\r\nreturn val;}",
              "extraInfo": {
                "arguments": [
                  "data",
                  "val",
                  "index",
                  "node",
                  "oldVal",
                  "form",
                  "type"
                ]
              },
              "name": "paramsGenerator"
            },
            {
              "attr": "useAttrCORS",
              "valueType": "Boolean",
              "extraInfo": "*",
              "defaultValue": false,
              "description": "连线操作和处理回写是否一致。\n                        比如多个文本框连线传值给相同对话框，弹窗修改\n                        后是否限定只能写到最新赋值过来的文本框。详见<a href='https://www.yuque.com/liuhuo-nc809/uiotos/fgi6dd7gado51acm#fFUbp' style=\"color:rgb(96,172,252)\"target=\"_blank\">同源属性操作</a>",
              "bindIgnored": true,
              "name": "useAttrCORS",
              "dynamicCreate": true
            },
            {
              "attr": "_bindEvents_0",
              "name": "连线事件_0",
              "valueType": "MultiComboBox",
              "defaultValue": "*",
              "group": "bindEvents",
              "description": "连线索引[0]的触发事件过滤器，默认全部通过",
              "dynamicCreate": true
            }
          ],
          "snapshotURL": "symbols/develop/uiotos/arranged/controls/forms_icon/普通按钮.json",
          "renderHTML": "__ht__function(data, gv, cache) {return __button(data,gv,cache);}",
          "width": 80,
          "height": 42,
          "boundExtend": 2,
          "fitSize": true,
          "interactive": true,
          "pixelPerfect": false,
          "attachStyle": "close",
          "comps": [
            {
              "type": "components/develop/uiotos/base/button.json",
              "displayName": "button（button1）",
              "rect": [
                0,
                0,
                80,
                42
              ],
              "onDown": "__ht__function(event, data, view, point, width, height) {\nht.vector.buttonInteractor.onDown.apply(this, arguments);\n}",
              "onUp": "__ht__function(event, data, view, point, width, height) {\nht.vector.buttonInteractor.onUp.apply(this, arguments);\n}",
              "onEnter": "__ht__function(event, data, view, point, width, height) {\nht.vector.buttonInteractor.onEnter.apply(this, arguments);\n}",
              "onLeave": "__ht__function(event, data, view, point, width, height) {\nht.vector.buttonInteractor.onLeave.apply(this, arguments);\n}",
              "text": {
                "func": "attr@ht.text",
                "value": "BUTTON"
              },
              "disabled": {
                "func": "attr@ht.disabled",
                "value": false
              },
              "font": {
                "func": "attr@ht.font",
                "value": "12px arial, sans-serif"
              },
              "icon": {
                "func": "attr@iconPath"
              },
              "iconPosition": {
                "func": "attr@ht.iconPosition",
                "value": "left"
              },
              "iconWidth": {
                "func": "__ht__function(data, view) {\nlet wtmp = data.ca('ht.iconWidth'),\r\n    stmp = data.ca('iconSize');\r\nreturn wtmp ? wtmp : (stmp && stmp[0] ? stmp[0] : 20);\n}",
                "value": 20
              },
              "iconHeight": {
                "func": "__ht__function(data, view) {\nlet wtmp = data.ca('ht.iconHeight'),\r\nstmp = data.ca('iconSize');\r\nreturn wtmp ? wtmp : (stmp && stmp[1] ? stmp[1] : 20);\n}",
                "value": 20
              },
              "iconGap": {
                "func": "attr@iconGap",
                "value": 5
              },
              "textColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.textColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[0];\n}",
                "value": "rgb(255,255,255)"
              },
              "hoverTextColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.textColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[1];\n}"
              },
              "activeTextColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.textColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[2];\n}"
              },
              "disabledTextColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.textColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[3];\n}",
                "value": "#ebebeb"
              },
              "borderWidth": {
                "func": "attr@ht.borderWidth",
                "value": 0
              },
              "borderColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.borderColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[0];\n}",
                "value": null
              },
              "hoverBorderColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.borderColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[1];\n}"
              },
              "activeBorderColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.borderColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[2];\n}"
              },
              "disabledBorderColor": {
                "func": "__ht__function(data, view) {\nlet color = data.ca('ht.borderColor')\r\nif(!color) color = [];\r\nelse if(!isArrayFn(color)) color = [color];\r\nreturn color[3];\n}",
                "value": "rgba(235,235,235,0)"
              },
              "background": {
                "func": "__ht__function(data, view) {\nlet bkg = data.ca('ht.background'),\r\n    bkgs = data.ca('background');\r\nreturn bkg ? bkg : bkgs && bkgs[0];\n}",
                "value": "rgb(55,125,255)"
              },
              "hoverBackground": {
                "func": "__ht__function(data, view) {\nlet bkg = data.ca('ht.hoverBackground'),\r\n    bkgs = data.ca('background');\r\nreturn bkg ? bkg : bkgs && bkgs[1];\n}"
              },
              "activeBackground": {
                "func": "__ht__function(data, view) {\nlet bkg = data.ca('ht.activeBackground'),\r\n    bkgs = data.ca('background');\r\nreturn bkg ? bkg : bkgs && bkgs[2];\n}"
              },
              "disabledBackground": {
                "func": "__ht__function(data, view) {\nlet bkg = data.ca('ht.disabledBackground'),\r\n    bkgs = data.ca('background');\r\nreturn bkg ? bkg : bkgs && bkgs[3];\n}",
                "value": "#fafafa"
              },
              "borderRadius": {
                "func": "attr@ht.borderRadius",
                "value": "0"
              },
              "handleClick": {
                "func": "attr@clicked"
              },
              "getValue": "__ht__function(V){var R=T(Q,V);return R===N8&&X.properties&&(V=X.properties[V])?V.defaultValue:R}",
              "getColor": "__ht__function(V,R){return wm(!0===R?V:Q.getValue(V))}"
            }
          ],
          "uuid": "42BFF49B-A467-40A3-B49D-B5C2EB489114"
        },
        "host": {
          "__i": 74110
        },
        "position": {
          "x": -32.69477,
          "y": 75.31247
        },
        "width": 70,
        "height": 35
      },
      "s": {
        "label.opacity": 0,
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0,
        "interactive": true,
        "2d.movable": false,
        "layout.h": "left",
        "layout.v": "top"
      },
      "a": {
        "symbol": "symbols/develop/uiotos/base/button.json",
        "ht.borderWidth": 0,
        "ht.borderRadius": 10,
        "ht.text": "下     ↓",
        "background": [
          "rgb(224,224,224)",
          "rgb(247,247,247)",
          "rgb(230,230,230)",
          "rgb(200,200,200)"
        ],
        "ht.textColor": [
          "rgb(99,99,99)",
          "rgb(133,130,130)",
          "rgb(99,99,99)",
          "rgb(127,127,127)"
        ],
        "ht.borderColor": [
          "rgb(255,255,255)",
          "rgb(255,255,255)",
          "rgb(255,255,255)",
          "rgb(127,127,127)"
        ],
        "icon-background": "rgb(255,255,255)",
        "paramControlTag": [
          null
        ],
        "paramControlAttr": [
          null
        ],
        "bindControlsTag": [
          "func1"
        ],
        "bindControlsAttr": [
          "a:exec"
        ],
        "bindControlsVal": [
          null
        ],
        "_bindEvents_0": "*"
      }
    },
    {
      "c": "ht.Edge",
      "i": 74161,
      "p": {
        "name": "edge",
        "displayName": "0（edge7）",
        "toolTip": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        连线配置信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：执行@func1</li> \n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li> \n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>",
        "parent": {
          "__i": 74160
        },
        "tag": "edge7",
        "source": {
          "__i": 74160
        },
        "target": {
          "__i": 74151
        }
      },
      "s": {
        "label": "",
        "edge.color": "rgb(51,153,255)",
        "edge.width": 4,
        "edge.type": "v.h",
        "edge.flex": 50,
        "edge.corner.radius": 0,
        "edge.gap": 16,
        "note.border.width": 0,
        "note.position": 7,
        "note.font": "14px arial, sans-serif",
        "note.opacity": 0.75,
        "label.opacity": 0,
        "note.background": "rgb(51,153,255)",
        "note.offset.x": 0,
        "note.offset.y": 0,
        "icons": {
          "symbols/demo/extra/basic/fromArrow2.json": {
            "position": 15,
            "keepOrien": true,
            "names": [
              "symbols/demo/extra/basic/fromArrow2.json"
            ]
          },
          "symbols/demo/extra/basic/toArrow.json": {
            "position": 19,
            "keepOrien": true,
            "width": 50,
            "height": 20,
            "names": [
              "symbols/demo/extra/basic/toArrow.json"
            ]
          }
        },
        "note": 0,
        "label.position": 17,
        "edge.ripple.size": 2,
        "edge.ripple.length": 0,
        "edge.ripple.elevation": 100,
        "edge.ripple.both": true,
        "edge.extend": 110
      },
      "a": {
        "index": 0,
        "toolTipRaw": "<div id=\"config_tooltip\" style=\"font-size:12px;line-height:1.75em;letter-spacing:1px\">\n                                                        连线配置信息：<br>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5);\">索引序号：0 | 总共1条</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">操作属性：执行@func1</li> \n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;当前值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold\">关联属性：</li> \n                                                        <li style=\"list-style-type:none;color:rgba(255,255,255,0.5)\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关联值：undefined</li>\n                                                        <li style=\"list-style-type:disc;font-weight:bold;\">解析赋值：null</li>\n                                                        <li style=\"list-style-type:disc;color:rgba(255,255,255,0.5)\">触发事件：*</li>\n                                                        <li style=\"list-style-type:disc;\">注释：<span style=\"color:rgb(125,195,125)\">0。\n<br></span></li>\n                                                    </div>"
      }
    },
    {
      "c": "ht.Node",
      "i": 74162,
      "p": {
        "name": "share-238",
        "displayName": "share-238（share-2381）",
        "toolTip": "<p style='color:rgb(242,83,75);margin-top:5px;margin-bottom:5px;font-weight:bold;line-height:1.5em;'>已被布局，不允许拖动（shift+回车可解除）</p>",
        "tag": "share-2381",
        "image": "symbols/develop/uiotos/arranged/icons/方向/share-238.json",
        "host": {
          "__i": 74110
        },
        "rotation": 1.49772,
        "position": {
          "x": 601.56845,
          "y": 111.90724
        },
        "anchor": {
          "x": 0.3902,
          "y": 0.55072
        },
        "width": 118.94843,
        "height": 69.75869
      },
      "s": {
        "label.position": 9,
        "label.offset.y": -8,
        "label.color": "rgb(125,195,125)",
        "2d.movable": false,
        "interactive": true,
        "image.stretch": "uniform",
        "label.opacity": 1,
        "label": "点击可进入",
        "label.font": "24px arial, sans-serif",
        "label.align": "left",
        "layout.h": "center",
        "layout.v": "top"
      },
      "a": {
        "icon-background": "rgb(242,83,75)",
        "_hideWhenRun": false
      }
    },
    {
      "c": "ht.Node",
      "i": 74163,
      "p": {
        "name": "不规则图形",
        "displayName": "不规则图形（不规则图形4'）",
        "tag": "不规则图形4'",
        "image": "symbols/develop/uiotos/arranged/controls/draws/1-绘制/不规则图形.json",
        "position": {
          "x": -334.20324,
          "y": -306.58314
        }
      },
      "s": {
        "2d.visible": false,
        "label.opacity": 0,
        "label.position": 14,
        "label.offset.x": -10,
        "label.offset.y": 0
      }
    }
  ],
  "modified": "Thu Aug 22 2024 00:07:28 GMT+0800 (中国标准时间)",
  "contentRect": {
    "x": -221.89289,
    "y": -292.62862,
    "width": 1509.5,
    "height": 925.41147
  }
}